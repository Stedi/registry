{
  "type": "object",
  "properties": {
    "id": {
      "type": "string",
      "description": "ID generated by Square Checkout when a new checkout is requested."
    },
    "checkout_page_url": {
      "type": "string",
      "description": "The URL that the buyer's browser should be redirected to after the\ncheckout is completed."
    },
    "ask_for_shipping_address": {
      "type": "boolean",
      "description": "If `true`, Square Checkout will collect shipping information on your\nbehalf and store that information with the transaction information in your\nSquare Dashboard.\n\nDefault: `false`."
    },
    "merchant_support_email": {
      "type": "string",
      "description": "The email address to display on the Square Checkout confirmation page\nand confirmation email that the buyer can use to contact the merchant.\n\nIf this value is not set, the confirmation page and email will display the\nprimary email address associated with the merchant's Square account.\n\nDefault: none; only exists if explicitly set."
    },
    "pre_populate_buyer_email": {
      "type": "string",
      "description": "If provided, the buyer's email is pre-populated on the checkout page\nas an editable text field.\n\nDefault: none; only exists if explicitly set."
    },
    "pre_populate_shipping_address": {
      "description": "If provided, the buyer's shipping info is pre-populated on the\ncheckout page as editable text fields.\n\nDefault: none; only exists if explicitly set.",
      "type": "object",
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address.\n\nFields that start with `address_line` provide the address's most specific\ndetails, like street number, street name, and building name. They do *not*\nprovide less specific details like city, state/province, or country (these\ndetails are provided in other fields)."
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address, if any."
        },
        "address_line_3": {
          "type": "string",
          "description": "The third line of the address, if any."
        },
        "locality": {
          "type": "string",
          "description": "The city or town of the address. For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses)."
        },
        "sublocality": {
          "type": "string",
          "description": "A civil region within the address's `locality`, if any."
        },
        "administrative_district_level_1": {
          "type": "string",
          "description": "A civil entity within the address's country. In the US, this\nis the state. For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses)."
        },
        "postal_code": {
          "type": "string",
          "description": "The address's postal code. For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses)."
        },
        "country": {
          "type": "string",
          "description": "The address's country, in the two-letter format of ISO 3166. For example, `US` or `FR`."
        }
      }
    },
    "redirect_url": {
      "type": "string",
      "description": "The URL to redirect to after checkout is completed with `checkoutId`,\nSquare's `orderId`, `transactionId`, and `referenceId` appended as URL\nparameters. For example, if the provided redirect_url is\n`http://www.example.com/order-complete`, a successful transaction redirects\nthe customer to:\n\n<pre><code>http://www.example.com/order-complete?checkoutId=xxxxxx&amp;orderId=xxxxxx&amp;referenceId=xxxxxx&amp;transactionId=xxxxxx</code></pre>\n\nIf you do not provide a redirect URL, Square Checkout will display an order\nconfirmation page on your behalf; however Square strongly recommends that\nyou provide a redirect URL so you can verify the transaction results and\nfinalize the order through your existing/normal confirmation workflow."
    },
    "order": {
      "description": "Order to be checked out.",
      "type": "object",
      "required": ["location_id"],
      "properties": {
        "id": {
          "type": "string",
          "description": "The order's unique ID."
        },
        "location_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the seller location that this order is associated with."
        },
        "reference_id": {
          "maxLength": 40,
          "type": "string",
          "description": "A client-specified ID to associate an entity in another system\nwith this order."
        },
        "source": {
          "description": "The origination details of the order.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name used to identify the place (physical or digital) that an order originates.\nIf unset, the name defaults to the name of the application that created the order."
            }
          }
        },
        "customer_id": {
          "maxLength": 191,
          "type": "string",
          "description": "The ID of the [customer](https://developer.squareup.com/reference/square_2022-03-16/objects/Customer) associated with the order.\n\n__IMPORTANT:__ You should specify a `customer_id` if you want the corresponding payment transactions\nto be explicitly linked to the customer in the Seller Dashboard. If this field is omitted, the \n`customer_id` assigned to any underlying `Payment` objects is ignored and might result in the \ncreation of new [instant profiles](https://developer.squareup.com/docs/customers-api/what-it-does#instant-profiles)."
        },
        "line_items": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["quantity"],
            "properties": {
              "uid": {
                "maxLength": 60,
                "type": "string",
                "description": "A unique ID that identifies the line item only within this order."
              },
              "name": {
                "maxLength": 512,
                "type": "string",
                "description": "The name of the line item."
              },
              "quantity": {
                "minLength": 1,
                "maxLength": 12,
                "type": "string",
                "description": "The quantity purchased, formatted as a decimal number.\nFor example, `\"3\"`.\n\nLine items with a quantity of `\"0\"` are automatically removed\nwhen paying for or otherwise completing the order.\n\nLine items with a `quantity_unit` can have non-integer quantities.\nFor example, `\"1.70000\"`."
              },
              "quantity_unit": {
                "description": "The unit and precision that this line item's quantity is measured in.",
                "type": "object",
                "properties": {
                  "measurement_unit": {
                    "description": "A [MeasurementUnit](https://developer.squareup.com/reference/square_2022-03-16/objects/MeasurementUnit) that represents the\nunit of measure for the quantity.",
                    "type": "object",
                    "properties": {
                      "custom_unit": {
                        "description": "A custom unit of measurement defined by the seller using the Point of Sale\napp or ad-hoc as an order line item.",
                        "type": "object",
                        "required": ["name", "abbreviation"],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the custom unit, for example \"bushel\"."
                          },
                          "abbreviation": {
                            "type": "string",
                            "description": "The abbreviation of the custom unit, such as \"bsh\" (bushel). This appears\nin the cart for the Point of Sale app, and in reports."
                          }
                        }
                      },
                      "area_unit": {
                        "type": "string",
                        "description": "Represents a standard area unit."
                      },
                      "length_unit": {
                        "type": "string",
                        "description": "Represents a standard length unit."
                      },
                      "volume_unit": {
                        "type": "string",
                        "description": "Represents a standard volume unit."
                      },
                      "weight_unit": {
                        "type": "string",
                        "description": "Represents a standard unit of weight or mass."
                      },
                      "generic_unit": {
                        "type": "string",
                        "description": "Reserved for API integrations that lack the ability to specify a real measurement unit"
                      },
                      "time_unit": {
                        "type": "string",
                        "description": "Represents a standard unit of time."
                      },
                      "type": {
                        "type": "string",
                        "description": "Represents the type of the measurement unit."
                      }
                    }
                  },
                  "precision": {
                    "type": "integer",
                    "description": "For non-integer quantities, represents the number of digits after the decimal point that are\nrecorded for this quantity.\n\nFor example, a precision of 1 allows quantities such as `\"1.0\"` and `\"1.1\"`, but not `\"1.01\"`.\n\nMin: 0. Max: 5."
                  },
                  "catalog_object_id": {
                    "type": "string",
                    "description": "The catalog object ID referencing the\n[CatalogMeasurementUnit](https://developer.squareup.com/reference/square_2022-03-16/objects/CatalogMeasurementUnit).\n\nThis field is set when this is a catalog-backed measurement unit."
                  },
                  "catalog_version": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The version of the catalog object that this measurement unit references.\n\nThis field is set when this is a catalog-backed measurement unit."
                  }
                }
              },
              "note": {
                "maxLength": 2000,
                "type": "string",
                "description": "The note of the line item."
              },
              "catalog_object_id": {
                "maxLength": 192,
                "type": "string",
                "description": "The [CatalogItemVariation](https://developer.squareup.com/reference/square_2022-03-16/objects/CatalogItemVariation) ID applied to this line item."
              },
              "catalog_version": {
                "type": "integer",
                "format": "int64",
                "description": "The version of the catalog object that this line item references."
              },
              "variation_name": {
                "maxLength": 400,
                "type": "string",
                "description": "The name of the variation applied to this line item."
              },
              "item_type": {
                "type": "string",
                "description": "The type of line item: an itemized sale, a non-itemized sale (custom amount), or the\nactivation or reloading of a gift card."
              },
              "metadata": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Application-defined data attached to this line item. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (such as personally\nidentifiable information or card details).\n\nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a ':' character.\n\nValues have a maximum length of 255 characters.\n\nAn application can have up to 10 entries per metadata field.\n\nEntries written by applications are private and can only be read or modified by the same\napplication.\n\nFor more information, see [Metadata](https://developer.squareup.com/docs/build-basics/metadata)."
              },
              "modifiers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uid": {
                      "maxLength": 60,
                      "type": "string",
                      "description": "A unique ID that identifies the modifier only within this order."
                    },
                    "catalog_object_id": {
                      "maxLength": 192,
                      "type": "string",
                      "description": "The catalog object ID referencing [CatalogModifier](https://developer.squareup.com/reference/square_2022-03-16/objects/CatalogModifier)."
                    },
                    "catalog_version": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The version of the catalog object that this modifier references."
                    },
                    "name": {
                      "maxLength": 255,
                      "type": "string",
                      "description": "The name of the item modifier."
                    },
                    "base_price_money": {
                      "description": "The base price for the modifier.\n\n`base_price_money` is required for ad hoc modifiers.\nIf both `catalog_object_id` and `base_price_money` are set, `base_price_money` will\noverride the predefined [CatalogModifier](https://developer.squareup.com/reference/square_2022-03-16/objects/CatalogModifier) price.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                        },
                        "currency": {
                          "type": "string",
                          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                        }
                      }
                    },
                    "total_price_money": {
                      "description": "The total price of the item modifier for its line item.\nThis is the modifier's `base_price_money` multiplied by the line item's quantity.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                        },
                        "currency": {
                          "type": "string",
                          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Application-defined data attached to this order. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (such as personally\nidentifiable information or card details).\n\nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a ':' character.\n\nValues have a maximum length of 255 characters.\n\nAn application can have up to 10 entries per metadata field.\n\nEntries written by applications are private and can only be read or modified by the same\napplication.\n\nFor more information, see  [Metadata](https://developer.squareup.com/docs/build-basics/metadata)."
                    }
                  },
                  "description": "A [CatalogModifier](https://developer.squareup.com/reference/square_2022-03-16/objects/CatalogModifier)."
                },
                "description": "The [CatalogModifier](https://developer.squareup.com/reference/square_2022-03-16/objects/CatalogModifier)s applied to this line item."
              },
              "applied_taxes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["tax_uid"],
                  "properties": {
                    "uid": {
                      "maxLength": 60,
                      "type": "string",
                      "description": "A unique ID that identifies the applied tax only within this order."
                    },
                    "tax_uid": {
                      "minLength": 1,
                      "maxLength": 60,
                      "type": "string",
                      "description": "The `uid` of the tax for which this applied tax represents. It must reference\na tax present in the `order.taxes` field.\n\nThis field is immutable. To change which taxes apply to a line item, delete and add a new\n`OrderLineItemAppliedTax`."
                    },
                    "applied_money": {
                      "description": "The amount of money applied by the tax to the line item.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                        },
                        "currency": {
                          "type": "string",
                          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                        }
                      }
                    }
                  },
                  "description": "Represents an applied portion of a tax to a line item in an order.\n\nOrder-scoped taxes automatically include the applied taxes in each line item.\nLine item taxes must be referenced from any applicable line items.\nThe corresponding applied money is automatically computed, based on the\nset of participating line items."
                },
                "description": "The list of references to taxes applied to this line item. Each\n`OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a\ntop-level `OrderLineItemTax` applied to the line item. On reads, the\namount applied is populated.\n\nAn `OrderLineItemAppliedTax` is automatically created on every line\nitem for all `ORDER` scoped taxes added to the order. `OrderLineItemAppliedTax`\nrecords for `LINE_ITEM` scoped taxes must be added in requests for the tax\nto apply to any line items.\n\nTo change the amount of a tax, modify the referenced top-level tax."
              },
              "applied_discounts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["discount_uid"],
                  "properties": {
                    "uid": {
                      "maxLength": 60,
                      "type": "string",
                      "description": "A unique ID that identifies the applied discount only within this order."
                    },
                    "discount_uid": {
                      "minLength": 1,
                      "maxLength": 60,
                      "type": "string",
                      "description": "The `uid` of the discount that the applied discount represents. It must\nreference a discount present in the `order.discounts` field.\n\nThis field is immutable. To change which discounts apply to a line item,\nyou must delete the discount and re-add it as a new `OrderLineItemAppliedDiscount`."
                    },
                    "applied_money": {
                      "description": "The amount of money applied by the discount to the line item.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                        },
                        "currency": {
                          "type": "string",
                          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                        }
                      }
                    }
                  },
                  "description": "Represents an applied portion of a discount to a line item in an order.\n\nOrder scoped discounts have automatically applied discounts present for each line item.\nLine-item scoped discounts must have applied discounts added manually for any applicable line\nitems. The corresponding applied money is automatically computed based on participating\nline items."
                },
                "description": "The list of references to discounts applied to this line item. Each\n`OrderLineItemAppliedDiscount` has a `discount_uid` that references the `uid` of a top-level\n`OrderLineItemDiscounts` applied to the line item. On reads, the amount\napplied is populated.\n\nAn `OrderLineItemAppliedDiscount` is automatically created on every line item for all\n`ORDER` scoped discounts that are added to the order. `OrderLineItemAppliedDiscount` records\nfor `LINE_ITEM` scoped discounts must be added in requests for the discount to apply to any\nline items.\n\nTo change the amount of a discount, modify the referenced top-level discount."
              },
              "base_price_money": {
                "description": "The base price for a single unit of the line item.",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                  },
                  "currency": {
                    "type": "string",
                    "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                  }
                }
              },
              "variation_total_price_money": {
                "description": "The total price of all item variations sold in this line item.\nThe price is calculated as `base_price_money` multiplied by `quantity`.\nIt does not include modifiers.",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                  },
                  "currency": {
                    "type": "string",
                    "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                  }
                }
              },
              "gross_sales_money": {
                "description": "The amount of money made in gross sales for this line item.\nThe amount is calculated as the sum of the variation's total price and each modifier's total price.",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                  },
                  "currency": {
                    "type": "string",
                    "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                  }
                }
              },
              "total_tax_money": {
                "description": "The total amount of tax money to collect for the line item.",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                  },
                  "currency": {
                    "type": "string",
                    "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                  }
                }
              },
              "total_discount_money": {
                "description": "The total amount of discount money to collect for the line item.",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                  },
                  "currency": {
                    "type": "string",
                    "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                  }
                }
              },
              "total_money": {
                "description": "The total amount of money to collect for this line item.",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                  },
                  "currency": {
                    "type": "string",
                    "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                  }
                }
              },
              "pricing_blocklists": {
                "description": "Describes pricing adjustments that are blocked from manual and\nautomatic application to a line item. For more information, see\n[Apply Taxes and Discounts](https://developer.squareup.com/docs/orders-api/apply-taxes-and-discounts).",
                "type": "object",
                "properties": {
                  "blocked_discounts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "uid": {
                          "maxLength": 60,
                          "type": "string",
                          "description": "A unique ID of the `BlockedDiscount` within the order."
                        },
                        "discount_uid": {
                          "maxLength": 60,
                          "type": "string",
                          "description": "The `uid` of the discount that should be blocked. Use this field to block \nad hoc discounts. For catalog discounts, use the `discount_catalog_object_id` field."
                        },
                        "discount_catalog_object_id": {
                          "maxLength": 192,
                          "type": "string",
                          "description": "The `catalog_object_id` of the discount that should be blocked. \nUse this field to block catalog discounts. For ad hoc discounts, use the \n`discount_uid` field."
                        }
                      },
                      "description": "A discount to block from applying to a line item. The discount must be \nidentified by either `discount_uid` or `discount_catalog_object_id`, but not both."
                    },
                    "description": "A list of discounts blocked from applying to the line item. \nDiscounts can be blocked by the `discount_uid` (for ad hoc discounts) or \nthe `discount_catalog_object_id` (for catalog discounts)."
                  },
                  "blocked_taxes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "uid": {
                          "maxLength": 60,
                          "type": "string",
                          "description": "A unique ID of the `BlockedTax` within the order."
                        },
                        "tax_uid": {
                          "maxLength": 60,
                          "type": "string",
                          "description": "The `uid` of the tax that should be blocked. Use this field to block \nad hoc taxes. For catalog, taxes use the `tax_catalog_object_id` field."
                        },
                        "tax_catalog_object_id": {
                          "maxLength": 192,
                          "type": "string",
                          "description": "The `catalog_object_id` of the tax that should be blocked. \nUse this field to block catalog taxes. For ad hoc taxes, use the \n`tax_uid` field."
                        }
                      },
                      "description": "A tax to block from applying to a line item. The tax must be \nidentified by either `tax_uid` or `tax_catalog_object_id`, but not both."
                    },
                    "description": "A list of taxes blocked from applying to the line item. \nTaxes can be blocked by the `tax_uid` (for ad hoc taxes) or \nthe `tax_catalog_object_id` (for catalog taxes)."
                  }
                }
              }
            },
            "description": "Represents a line item in an order. Each line item describes a different\nproduct to purchase, with its own quantity and price details."
          },
          "description": "The line items included in the order."
        },
        "taxes": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "uid": {
                "maxLength": 60,
                "type": "string",
                "description": "A unique ID that identifies the tax only within this order."
              },
              "catalog_object_id": {
                "maxLength": 192,
                "type": "string",
                "description": "The catalog object ID referencing [CatalogTax](https://developer.squareup.com/reference/square_2022-03-16/objects/CatalogTax)."
              },
              "catalog_version": {
                "type": "integer",
                "format": "int64",
                "description": "The version of the catalog object that this tax references."
              },
              "name": {
                "maxLength": 255,
                "type": "string",
                "description": "The tax's name."
              },
              "type": {
                "type": "string",
                "description": "Indicates the calculation method used to apply the tax."
              },
              "percentage": {
                "maxLength": 10,
                "type": "string",
                "description": "The percentage of the tax, as a string representation of a decimal\nnumber. For example, a value of `\"7.25\"` corresponds to a percentage of\n7.25%."
              },
              "metadata": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Application-defined data attached to this tax. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (such as personally\nidentifiable information or card details).\n\nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a ':' character.\n\nValues have a maximum length of 255 characters.\n\nAn application can have up to 10 entries per metadata field.\n\nEntries written by applications are private and can only be read or modified by the same\napplication.\n\nFor more information, see [Metadata](https://developer.squareup.com/docs/build-basics/metadata)."
              },
              "applied_money": {
                "description": "The amount of money applied by the tax in the order.",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                  },
                  "currency": {
                    "type": "string",
                    "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                  }
                }
              },
              "scope": {
                "type": "string",
                "description": "Indicates the level at which the tax applies. For `ORDER` scoped taxes,\nSquare generates references in `applied_taxes` on all order line items that do\nnot have them. For `LINE_ITEM` scoped taxes, the tax only applies to line items\nwith references in their `applied_taxes` field.\n\nThis field is immutable. To change the scope, you must delete the tax and\nre-add it as a new tax."
              },
              "auto_applied": {
                "type": "boolean",
                "description": "Determines whether the tax was automatically applied to the order based on\nthe catalog configuration. For an example, see \n[Automatically Apply Taxes to an Order](https://developer.squareup.com/docs/orders-api/apply-taxes-and-discounts/auto-apply-taxes)."
              }
            },
            "description": "Represents a tax that applies to one or more line item in the order.\n\nFixed-amount, order-scoped taxes are distributed across all non-zero line item totals.\nThe amount distributed to each line item is relative to the amount the item\ncontributes to the order subtotal."
          },
          "description": "The list of all taxes associated with the order.\n\nTaxes can be scoped to either `ORDER` or `LINE_ITEM`. For taxes with `LINE_ITEM` scope, an\n`OrderLineItemAppliedTax` must be added to each line item that the tax applies to. For taxes\nwith `ORDER` scope, the server generates an `OrderLineItemAppliedTax` for every line item.\n\nOn reads, each tax in the list includes the total amount of that tax applied to the order.\n\n__IMPORTANT__: If `LINE_ITEM` scope is set on any taxes in this field, using the deprecated\n`line_items.taxes` field results in an error. Use `line_items.applied_taxes`\ninstead."
        },
        "discounts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "uid": {
                "maxLength": 60,
                "type": "string",
                "description": "A unique ID that identifies the discount only within this order."
              },
              "catalog_object_id": {
                "maxLength": 192,
                "type": "string",
                "description": "The catalog object ID referencing [CatalogDiscount](https://developer.squareup.com/reference/square_2022-03-16/objects/CatalogDiscount)."
              },
              "catalog_version": {
                "type": "integer",
                "format": "int64",
                "description": "The version of the catalog object that this discount references."
              },
              "name": {
                "maxLength": 255,
                "type": "string",
                "description": "The discount's name."
              },
              "type": {
                "type": "string",
                "description": "The type of the discount.\n\nDiscounts that do not reference a catalog object ID must have a type of\n`FIXED_PERCENTAGE` or `FIXED_AMOUNT`."
              },
              "percentage": {
                "maxLength": 10,
                "type": "string",
                "description": "The percentage of the discount, as a string representation of a decimal number.\nA value of `7.25` corresponds to a percentage of 7.25%.\n\n`percentage` is not set for amount-based discounts."
              },
              "amount_money": {
                "description": "The total declared monetary amount of the discount.\n\n`amount_money` is not set for percentage-based discounts.",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                  },
                  "currency": {
                    "type": "string",
                    "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                  }
                }
              },
              "applied_money": {
                "description": "The amount of discount actually applied to the line item.\n\nThe amount represents the amount of money applied as a line-item scoped discount.\nWhen an amount-based discount is scoped to the entire order, the value\nof `applied_money` is different than `amount_money` because the total\namount of the discount is distributed across all line items.",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                  },
                  "currency": {
                    "type": "string",
                    "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                  }
                }
              },
              "metadata": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Application-defined data attached to this discount. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (such as personally\nidentifiable information or card details).\n\nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a ':' character.\n\nValues have a maximum length of 255 characters.\n\nAn application can have up to 10 entries per metadata field.\n\nEntries written by applications are private and can only be read or modified by the same\napplication.\n\nFor more information, see [Metadata](https://developer.squareup.com/docs/build-basics/metadata)."
              },
              "scope": {
                "type": "string",
                "description": "Indicates the level at which the discount applies. For `ORDER` scoped discounts,\nSquare generates references in `applied_discounts` on all order line items that do\nnot have them. For `LINE_ITEM` scoped discounts, the discount only applies to line items\nwith a discount reference in their `applied_discounts` field.\n\nThis field is immutable. To change the scope of a discount, you must delete\nthe discount and re-add it as a new discount."
              },
              "reward_ids": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The reward IDs corresponding to this discount. The application and\nspecification of discounts that have `reward_ids` are completely controlled by the backing\ncriteria corresponding to the reward tiers of the rewards that are added to the order\nthrough the Loyalty API. To manually unapply discounts that are the result of added rewards,\nthe rewards must be removed from the order through the Loyalty API."
              },
              "pricing_rule_id": {
                "type": "string",
                "description": "The object ID of a [pricing rule](https://developer.squareup.com/reference/square_2022-03-16/objects/CatalogPricingRule) to be applied \nautomatically to this discount. The specification and application of the discounts, to \nwhich a `pricing_rule_id` is assigned, are completely controlled by the corresponding \npricing rule."
              }
            },
            "description": "Represents a discount that applies to one or more line items in an\norder.\n\nFixed-amount, order-scoped discounts are distributed across all non-zero line item totals.\nThe amount distributed to each line item is relative to the\namount contributed by the item to the order subtotal."
          },
          "description": "The list of all discounts associated with the order.\n\nDiscounts can be scoped to either `ORDER` or `LINE_ITEM`. For discounts scoped to `LINE_ITEM`,\nan `OrderLineItemAppliedDiscount` must be added to each line item that the discount applies to.\nFor discounts with `ORDER` scope, the server generates an `OrderLineItemAppliedDiscount`\nfor every line item.\n\n__IMPORTANT__: If `LINE_ITEM` scope is set on any discounts in this field, using the deprecated\n`line_items.discounts` field results in an error. Use `line_items.applied_discounts`\ninstead."
        },
        "service_charges": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "uid": {
                "maxLength": 60,
                "type": "string",
                "description": "A unique ID that identifies the service charge only within this order."
              },
              "name": {
                "maxLength": 255,
                "type": "string",
                "description": "The name of the service charge."
              },
              "catalog_object_id": {
                "maxLength": 192,
                "type": "string",
                "description": "The catalog object ID referencing the service charge [CatalogObject](https://developer.squareup.com/reference/square_2022-03-16/objects/CatalogObject)."
              },
              "catalog_version": {
                "type": "integer",
                "format": "int64",
                "description": "The version of the catalog object that this service charge references."
              },
              "percentage": {
                "maxLength": 10,
                "type": "string",
                "description": "The service charge percentage as a string representation of a\ndecimal number. For example, `\"7.25\"` indicates a service charge of 7.25%.\n\nExactly 1 of `percentage` or `amount_money` should be set."
              },
              "amount_money": {
                "description": "The amount of a non-percentage-based service charge.\n\nExactly one of `percentage` or `amount_money` should be set.",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                  },
                  "currency": {
                    "type": "string",
                    "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                  }
                }
              },
              "applied_money": {
                "description": "The amount of money applied to the order by the service charge,\nincluding any inclusive tax amounts, as calculated by Square.\n\n- For fixed-amount service charges, `applied_money` is equal to `amount_money`.\n- For percentage-based service charges, `applied_money` is the money\ncalculated using the percentage.",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                  },
                  "currency": {
                    "type": "string",
                    "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                  }
                }
              },
              "total_money": {
                "description": "The total amount of money to collect for the service charge.\n\n__Note__: If an inclusive tax is applied to the service charge,\n`total_money` does not equal `applied_money` plus `total_tax_money`\nbecause the inclusive tax amount is already included in both\n`applied_money` and `total_tax_money`.",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                  },
                  "currency": {
                    "type": "string",
                    "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                  }
                }
              },
              "total_tax_money": {
                "description": "The total amount of tax money to collect for the service charge.",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                  },
                  "currency": {
                    "type": "string",
                    "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                  }
                }
              },
              "calculation_phase": {
                "type": "string",
                "description": "The calculation phase at which to apply the service charge."
              },
              "taxable": {
                "type": "boolean",
                "description": "Indicates whether the service charge can be taxed. If set to `true`,\norder-level taxes automatically apply to the service charge. Note that\nservice charges calculated in the `TOTAL_PHASE` cannot be marked as taxable."
              },
              "applied_taxes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["tax_uid"],
                  "properties": {
                    "uid": {
                      "maxLength": 60,
                      "type": "string",
                      "description": "A unique ID that identifies the applied tax only within this order."
                    },
                    "tax_uid": {
                      "minLength": 1,
                      "maxLength": 60,
                      "type": "string",
                      "description": "The `uid` of the tax for which this applied tax represents. It must reference\na tax present in the `order.taxes` field.\n\nThis field is immutable. To change which taxes apply to a line item, delete and add a new\n`OrderLineItemAppliedTax`."
                    },
                    "applied_money": {
                      "description": "The amount of money applied by the tax to the line item.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                        },
                        "currency": {
                          "type": "string",
                          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                        }
                      }
                    }
                  },
                  "description": "Represents an applied portion of a tax to a line item in an order.\n\nOrder-scoped taxes automatically include the applied taxes in each line item.\nLine item taxes must be referenced from any applicable line items.\nThe corresponding applied money is automatically computed, based on the\nset of participating line items."
                },
                "description": "The list of references to the taxes applied to this service charge. Each\n`OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a top-level\n`OrderLineItemTax` that is being applied to this service charge. On reads, the amount applied\nis populated.\n\nAn `OrderLineItemAppliedTax` is automatically created on every taxable service charge\nfor all `ORDER` scoped taxes that are added to the order. `OrderLineItemAppliedTax` records\nfor `LINE_ITEM` scoped taxes must be added in requests for the tax to apply to any taxable\nservice charge. Taxable service charges have the `taxable` field set to `true` and calculated\nin the `SUBTOTAL_PHASE`.\n\nTo change the amount of a tax, modify the referenced top-level tax."
              },
              "metadata": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Application-defined data attached to this service charge. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (such as personally\nidentifiable information or card details).\n\nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a ':' character.\n\nValues have a maximum length of 255 characters.\n\nAn application can have up to 10 entries per metadata field.\n\nEntries written by applications are private and can only be read or modified by the same\napplication.\n\nFor more information, see [Metadata](https://developer.squareup.com/docs/build-basics/metadata)."
              },
              "type": {
                "type": "string",
                "description": "The type of the service charge."
              }
            },
            "description": "Represents a service charge applied to an order."
          },
          "description": "A list of service charges applied to the order."
        },
        "fulfillments": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "uid": {
                "maxLength": 60,
                "type": "string",
                "description": "A unique ID that identifies the fulfillment only within this order."
              },
              "type": {
                "type": "string",
                "description": "The type of the fulfillment."
              },
              "state": {
                "type": "string",
                "description": "The state of the fulfillment."
              },
              "line_item_application": {
                "type": "string",
                "description": "Describes what order line items this fulfillment applies to.\nIt can be `ALL` or `ENTRY_LIST` with a supplied list of fulfillment entries."
              },
              "entries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["line_item_uid", "quantity"],
                  "properties": {
                    "uid": {
                      "maxLength": 60,
                      "type": "string",
                      "description": "A unique ID that identifies the fulfillment entry only within this order."
                    },
                    "line_item_uid": {
                      "minLength": 1,
                      "type": "string",
                      "description": "The `uid` from the order line item."
                    },
                    "quantity": {
                      "minLength": 1,
                      "maxLength": 12,
                      "type": "string",
                      "description": "The quantity of the line item being fulfilled, formatted as a decimal number.\nFor example, `\"3\"`.\n\nFulfillments for line items with a `quantity_unit` can have non-integer quantities.\nFor example, `\"1.70000\"`."
                    },
                    "metadata": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Application-defined data attached to this fulfillment entry. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (such as personally\nidentifiable information or card details).\n\nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a ':' character.\n\nValues have a maximum length of 255 characters.\n\nAn application can have up to 10 entries per metadata field.\n\nEntries written by applications are private and can only be read or modified by the same\napplication.\n\nFor more information, see [Metadata](https://developer.squareup.com/docs/build-basics/metadata)."
                    }
                  },
                  "description": "Links an order line item to a fulfillment. Each entry must reference\na valid `uid` for an order line item in the `line_item_uid` field, as well as a `quantity` to\nfulfill."
                },
                "description": "A list of entries pertaining to the fulfillment of an order. Each entry must reference\na valid `uid` for an order line item in the `line_item_uid` field, as well as a `quantity` to\nfulfill.\n\nMultiple entries can reference the same line item `uid`, as long as the total quantity among\nall fulfillment entries referencing a single line item does not exceed the quantity of the\norder's line item itself.\n\nAn order cannot be marked as `COMPLETED` before all fulfillments are `COMPLETED`,\n`CANCELED`, or `FAILED`. Fulfillments can be created and completed independently\nbefore order completion."
              },
              "metadata": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Application-defined data attached to this fulfillment. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (such as personally\nidentifiable information or card details).\n\nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a ':' character.\n\nValues have a maximum length of 255 characters.\n\nAn application can have up to 10 entries per metadata field.\n\nEntries written by applications are private and can only be read or modified by the same\napplication.\n\nFor more information, see [Metadata](https://developer.squareup.com/docs/build-basics/metadata)."
              },
              "pickup_details": {
                "description": "Contains details for a pickup fulfillment. These details are required when the fulfillment\ntype is `PICKUP`.",
                "type": "object",
                "properties": {
                  "recipient": {
                    "description": "Information about the person meant to pick up this fulfillment from a physical\nlocation.",
                    "type": "object",
                    "properties": {
                      "customer_id": {
                        "maxLength": 191,
                        "type": "string",
                        "description": "The customer ID of the customer associated with the fulfillment.\n\nIf `customer_id` is provided, the fulfillment recipient's `display_name`,\n`email_address`, and `phone_number` are automatically populated from the\ntargeted customer profile. If these fields are set in the request, the request\nvalues overrides the information from the customer profile. If the\ntargeted customer profile does not contain the necessary information and\nthese fields are left unset, the request results in an error."
                      },
                      "display_name": {
                        "maxLength": 255,
                        "type": "string",
                        "description": "The display name of the fulfillment recipient.\n\nIf provided, the display name overrides the value pulled from the customer profile indicated by `customer_id`."
                      },
                      "email_address": {
                        "maxLength": 255,
                        "type": "string",
                        "description": "The email address of the fulfillment recipient.\n\nIf provided, the email address overrides the value pulled from the customer profile indicated by `customer_id`."
                      },
                      "phone_number": {
                        "maxLength": 17,
                        "type": "string",
                        "description": "The phone number of the fulfillment recipient.\n\nIf provided, the phone number overrides the value pulled from the customer profile indicated by `customer_id`."
                      },
                      "address": {
                        "description": "The address of the fulfillment recipient.\n\nIf provided, the address overrides the value pulled from the customer profile indicated by `customer_id`.",
                        "type": "object",
                        "properties": {
                          "address_line_1": {
                            "type": "string",
                            "description": "The first line of the address.\n\nFields that start with `address_line` provide the address's most specific\ndetails, like street number, street name, and building name. They do *not*\nprovide less specific details like city, state/province, or country (these\ndetails are provided in other fields)."
                          },
                          "address_line_2": {
                            "type": "string",
                            "description": "The second line of the address, if any."
                          },
                          "address_line_3": {
                            "type": "string",
                            "description": "The third line of the address, if any."
                          },
                          "locality": {
                            "type": "string",
                            "description": "The city or town of the address. For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses)."
                          },
                          "sublocality": {
                            "type": "string",
                            "description": "A civil region within the address's `locality`, if any."
                          },
                          "administrative_district_level_1": {
                            "type": "string",
                            "description": "A civil entity within the address's country. In the US, this\nis the state. For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses)."
                          },
                          "postal_code": {
                            "type": "string",
                            "description": "The address's postal code. For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses)."
                          },
                          "country": {
                            "type": "string",
                            "description": "The address's country, in the two-letter format of ISO 3166. For example, `US` or `FR`."
                          }
                        }
                      }
                    }
                  },
                  "expires_at": {
                    "type": "string",
                    "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) \nindicating when this fulfillment expires if it is not accepted. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\"). The expiration time can only be set up to 7 days in the future.\nIf `expires_at` is not set, this pickup fulfillment is automatically accepted when \nplaced."
                  },
                  "auto_complete_duration": {
                    "type": "string",
                    "description": "The duration of time after which an open and accepted pickup fulfillment\nis automatically moved to the `COMPLETED` state. The duration must be in RFC 3339\nformat (for example, \"P1W3D\").\n\nIf not set, this pickup fulfillment remains accepted until it is canceled or completed."
                  },
                  "schedule_type": {
                    "type": "string",
                    "description": "The schedule type of the pickup fulfillment. Defaults to `SCHEDULED`."
                  },
                  "pickup_at": {
                    "type": "string",
                    "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) \nthat represents the start of the pickup window. Must be in RFC 3339 timestamp format, e.g., \n\"2016-09-04T23:59:33.123Z\".\n\nFor fulfillments with the schedule type `ASAP`, this is automatically set\nto the current time plus the expected duration to prepare the fulfillment."
                  },
                  "pickup_window_duration": {
                    "type": "string",
                    "description": "The window of time in which the order should be picked up after the `pickup_at` timestamp.\nMust be in RFC 3339 duration format, e.g., \"P1W3D\". Can be used as an\ninformational guideline for merchants."
                  },
                  "prep_time_duration": {
                    "type": "string",
                    "description": "The duration of time it takes to prepare this fulfillment.\nThe duration must be in RFC 3339 format (for example, \"P1W3D\")."
                  },
                  "note": {
                    "maxLength": 500,
                    "type": "string",
                    "description": "A note meant to provide additional instructions about the pickup\nfulfillment displayed in the Square Point of Sale application and set by the API."
                  },
                  "placed_at": {
                    "type": "string",
                    "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) \nindicating when the fulfillment was placed. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\")."
                  },
                  "accepted_at": {
                    "type": "string",
                    "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) \nindicating when the fulfillment was accepted. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\")."
                  },
                  "rejected_at": {
                    "type": "string",
                    "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) \nindicating when the fulfillment was rejected. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\")."
                  },
                  "ready_at": {
                    "type": "string",
                    "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) \nindicating when the fulfillment is marked as ready for pickup. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\")."
                  },
                  "expired_at": {
                    "type": "string",
                    "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when the fulfillment expired. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\")."
                  },
                  "picked_up_at": {
                    "type": "string",
                    "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when the fulfillment was picked up by the recipient. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\")."
                  },
                  "canceled_at": {
                    "type": "string",
                    "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) \nindicating when the fulfillment was canceled. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\")."
                  },
                  "cancel_reason": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "A description of why the pickup was canceled. The maximum length: 100 characters."
                  },
                  "is_curbside_pickup": {
                    "type": "boolean",
                    "description": "If set to `true`, indicates that this pickup order is for curbside pickup, not in-store pickup."
                  },
                  "curbside_pickup_details": {
                    "description": "Specific details for curbside pickup. These details can only be populated if `is_curbside_pickup` is set to `true`.",
                    "type": "object",
                    "properties": {
                      "curbside_details": {
                        "maxLength": 250,
                        "type": "string",
                        "description": "Specific details for curbside pickup, such as parking number and vehicle model."
                      },
                      "buyer_arrived_at": {
                        "type": "string",
                        "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) \nindicating when the buyer arrived and is waiting for pickup. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\")."
                      }
                    }
                  }
                }
              },
              "shipment_details": {
                "description": "Contains details for a shipment fulfillment. These details are required when the fulfillment type\nis `SHIPMENT`.\n\nA shipment fulfillment's relationship to fulfillment `state`:\n`PROPOSED`: A shipment is requested.\n`RESERVED`: Fulfillment accepted. Shipment processing.\n`PREPARED`: Shipment packaged. Shipping label created.\n`COMPLETED`: Package has been shipped.\n`CANCELED`: Shipment has been canceled.\n`FAILED`: Shipment has failed.",
                "type": "object",
                "properties": {
                  "recipient": {
                    "description": "Information about the person meant to receive this shipment fulfillment.",
                    "type": "object",
                    "properties": {
                      "customer_id": {
                        "maxLength": 191,
                        "type": "string",
                        "description": "The customer ID of the customer associated with the fulfillment.\n\nIf `customer_id` is provided, the fulfillment recipient's `display_name`,\n`email_address`, and `phone_number` are automatically populated from the\ntargeted customer profile. If these fields are set in the request, the request\nvalues overrides the information from the customer profile. If the\ntargeted customer profile does not contain the necessary information and\nthese fields are left unset, the request results in an error."
                      },
                      "display_name": {
                        "maxLength": 255,
                        "type": "string",
                        "description": "The display name of the fulfillment recipient.\n\nIf provided, the display name overrides the value pulled from the customer profile indicated by `customer_id`."
                      },
                      "email_address": {
                        "maxLength": 255,
                        "type": "string",
                        "description": "The email address of the fulfillment recipient.\n\nIf provided, the email address overrides the value pulled from the customer profile indicated by `customer_id`."
                      },
                      "phone_number": {
                        "maxLength": 17,
                        "type": "string",
                        "description": "The phone number of the fulfillment recipient.\n\nIf provided, the phone number overrides the value pulled from the customer profile indicated by `customer_id`."
                      },
                      "address": {
                        "description": "The address of the fulfillment recipient.\n\nIf provided, the address overrides the value pulled from the customer profile indicated by `customer_id`.",
                        "type": "object",
                        "properties": {
                          "address_line_1": {
                            "type": "string",
                            "description": "The first line of the address.\n\nFields that start with `address_line` provide the address's most specific\ndetails, like street number, street name, and building name. They do *not*\nprovide less specific details like city, state/province, or country (these\ndetails are provided in other fields)."
                          },
                          "address_line_2": {
                            "type": "string",
                            "description": "The second line of the address, if any."
                          },
                          "address_line_3": {
                            "type": "string",
                            "description": "The third line of the address, if any."
                          },
                          "locality": {
                            "type": "string",
                            "description": "The city or town of the address. For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses)."
                          },
                          "sublocality": {
                            "type": "string",
                            "description": "A civil region within the address's `locality`, if any."
                          },
                          "administrative_district_level_1": {
                            "type": "string",
                            "description": "A civil entity within the address's country. In the US, this\nis the state. For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses)."
                          },
                          "postal_code": {
                            "type": "string",
                            "description": "The address's postal code. For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses)."
                          },
                          "country": {
                            "type": "string",
                            "description": "The address's country, in the two-letter format of ISO 3166. For example, `US` or `FR`."
                          }
                        }
                      }
                    }
                  },
                  "carrier": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The shipping carrier being used to ship this fulfillment (such as UPS, FedEx, or USPS)."
                  },
                  "shipping_note": {
                    "maxLength": 500,
                    "type": "string",
                    "description": "A note with additional information for the shipping carrier."
                  },
                  "shipping_type": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "A description of the type of shipping product purchased from the carrier\n(such as First Class, Priority, or Express)."
                  },
                  "tracking_number": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "The reference number provided by the carrier to track the shipment's progress."
                  },
                  "tracking_url": {
                    "maxLength": 2000,
                    "type": "string",
                    "description": "A link to the tracking webpage on the carrier's website."
                  },
                  "placed_at": {
                    "type": "string",
                    "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when the shipment was requested. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\")."
                  },
                  "in_progress_at": {
                    "type": "string",
                    "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when this fulfillment was moved to the `RESERVED` state, which  indicates that preparation\nof this shipment has begun. The timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\")."
                  },
                  "packaged_at": {
                    "type": "string",
                    "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when this fulfillment was moved to the `PREPARED` state, which indicates that the\nfulfillment is packaged. The timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\")."
                  },
                  "expected_shipped_at": {
                    "type": "string",
                    "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when the shipment is expected to be delivered to the shipping carrier.\nThe timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\")."
                  },
                  "shipped_at": {
                    "type": "string",
                    "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when this fulfillment was moved to the `COMPLETED` state, which indicates that\nthe fulfillment has been given to the shipping carrier. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\")."
                  },
                  "canceled_at": {
                    "type": "string",
                    "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating the shipment was canceled.\nThe timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\")."
                  },
                  "cancel_reason": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "A description of why the shipment was canceled."
                  },
                  "failed_at": {
                    "type": "string",
                    "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when the shipment failed to be completed. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\")."
                  },
                  "failure_reason": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "A description of why the shipment failed to be completed."
                  }
                }
              }
            },
            "description": "Contains details about how to fulfill this order."
          },
          "description": "Details about order fulfillment.\n\nOrders can only be created with at most one fulfillment. However, orders returned\nby the API might contain multiple fulfillments."
        },
        "returns": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "uid": {
                "maxLength": 60,
                "type": "string",
                "description": "A unique ID that identifies the return only within this order."
              },
              "source_order_id": {
                "type": "string",
                "description": "An order that contains the original sale of these return line items. This is unset\nfor unlinked returns."
              },
              "return_line_items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["quantity"],
                  "properties": {
                    "uid": {
                      "maxLength": 60,
                      "type": "string",
                      "description": "A unique ID for this return line-item entry."
                    },
                    "source_line_item_uid": {
                      "maxLength": 60,
                      "type": "string",
                      "description": "The `uid` of the line item in the original sale order."
                    },
                    "name": {
                      "maxLength": 512,
                      "type": "string",
                      "description": "The name of the line item."
                    },
                    "quantity": {
                      "minLength": 1,
                      "maxLength": 12,
                      "type": "string",
                      "description": "The quantity returned, formatted as a decimal number.\nFor example, `\"3\"`.\n\nLine items with a `quantity_unit` can have non-integer quantities.\nFor example, `\"1.70000\"`."
                    },
                    "quantity_unit": {
                      "description": "The unit and precision that this return line item's quantity is measured in.",
                      "type": "object",
                      "properties": {
                        "measurement_unit": {
                          "description": "A [MeasurementUnit](https://developer.squareup.com/reference/square_2022-03-16/objects/MeasurementUnit) that represents the\nunit of measure for the quantity.",
                          "type": "object",
                          "properties": {
                            "custom_unit": {
                              "description": "A custom unit of measurement defined by the seller using the Point of Sale\napp or ad-hoc as an order line item.",
                              "type": "object",
                              "required": ["name", "abbreviation"],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the custom unit, for example \"bushel\"."
                                },
                                "abbreviation": {
                                  "type": "string",
                                  "description": "The abbreviation of the custom unit, such as \"bsh\" (bushel). This appears\nin the cart for the Point of Sale app, and in reports."
                                }
                              }
                            },
                            "area_unit": {
                              "type": "string",
                              "description": "Represents a standard area unit."
                            },
                            "length_unit": {
                              "type": "string",
                              "description": "Represents a standard length unit."
                            },
                            "volume_unit": {
                              "type": "string",
                              "description": "Represents a standard volume unit."
                            },
                            "weight_unit": {
                              "type": "string",
                              "description": "Represents a standard unit of weight or mass."
                            },
                            "generic_unit": {
                              "type": "string",
                              "description": "Reserved for API integrations that lack the ability to specify a real measurement unit"
                            },
                            "time_unit": {
                              "type": "string",
                              "description": "Represents a standard unit of time."
                            },
                            "type": {
                              "type": "string",
                              "description": "Represents the type of the measurement unit."
                            }
                          }
                        },
                        "precision": {
                          "type": "integer",
                          "description": "For non-integer quantities, represents the number of digits after the decimal point that are\nrecorded for this quantity.\n\nFor example, a precision of 1 allows quantities such as `\"1.0\"` and `\"1.1\"`, but not `\"1.01\"`.\n\nMin: 0. Max: 5."
                        },
                        "catalog_object_id": {
                          "type": "string",
                          "description": "The catalog object ID referencing the\n[CatalogMeasurementUnit](https://developer.squareup.com/reference/square_2022-03-16/objects/CatalogMeasurementUnit).\n\nThis field is set when this is a catalog-backed measurement unit."
                        },
                        "catalog_version": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The version of the catalog object that this measurement unit references.\n\nThis field is set when this is a catalog-backed measurement unit."
                        }
                      }
                    },
                    "note": {
                      "maxLength": 2000,
                      "type": "string",
                      "description": "The note of the return line item."
                    },
                    "catalog_object_id": {
                      "maxLength": 192,
                      "type": "string",
                      "description": "The [CatalogItemVariation](https://developer.squareup.com/reference/square_2022-03-16/objects/CatalogItemVariation) ID applied to this return line item."
                    },
                    "catalog_version": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The version of the catalog object that this line item references."
                    },
                    "variation_name": {
                      "maxLength": 400,
                      "type": "string",
                      "description": "The name of the variation applied to this return line item."
                    },
                    "item_type": {
                      "type": "string",
                      "description": "The type of line item: an itemized return, a non-itemized return (custom amount),\nor the return of an unactivated gift card sale."
                    },
                    "return_modifiers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uid": {
                            "maxLength": 60,
                            "type": "string",
                            "description": "A unique ID that identifies the return modifier only within this order."
                          },
                          "source_modifier_uid": {
                            "maxLength": 60,
                            "type": "string",
                            "description": "The modifier `uid` from the order's line item that contains the\noriginal sale of this line item modifier."
                          },
                          "catalog_object_id": {
                            "maxLength": 192,
                            "type": "string",
                            "description": "The catalog object ID referencing [CatalogModifier](https://developer.squareup.com/reference/square_2022-03-16/objects/CatalogModifier)."
                          },
                          "catalog_version": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The version of the catalog object that this line item modifier references."
                          },
                          "name": {
                            "maxLength": 255,
                            "type": "string",
                            "description": "The name of the item modifier."
                          },
                          "base_price_money": {
                            "description": "The base price for the modifier.\n\n`base_price_money` is required for ad hoc modifiers.\nIf both `catalog_object_id` and `base_price_money` are set, `base_price_money` overrides the predefined [CatalogModifier](https://developer.squareup.com/reference/square_2022-03-16/objects/CatalogModifier) price.",
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                              },
                              "currency": {
                                "type": "string",
                                "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                              }
                            }
                          },
                          "total_price_money": {
                            "description": "The total price of the item modifier for its line item.\nThis is the modifier's `base_price_money` multiplied by the line item's quantity.",
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                              },
                              "currency": {
                                "type": "string",
                                "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                              }
                            }
                          }
                        },
                        "description": "A line item modifier being returned."
                      },
                      "description": "The [CatalogModifier](https://developer.squareup.com/reference/square_2022-03-16/objects/CatalogModifier)s applied to this line item."
                    },
                    "applied_taxes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": ["tax_uid"],
                        "properties": {
                          "uid": {
                            "maxLength": 60,
                            "type": "string",
                            "description": "A unique ID that identifies the applied tax only within this order."
                          },
                          "tax_uid": {
                            "minLength": 1,
                            "maxLength": 60,
                            "type": "string",
                            "description": "The `uid` of the tax for which this applied tax represents. It must reference\na tax present in the `order.taxes` field.\n\nThis field is immutable. To change which taxes apply to a line item, delete and add a new\n`OrderLineItemAppliedTax`."
                          },
                          "applied_money": {
                            "description": "The amount of money applied by the tax to the line item.",
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                              },
                              "currency": {
                                "type": "string",
                                "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                              }
                            }
                          }
                        },
                        "description": "Represents an applied portion of a tax to a line item in an order.\n\nOrder-scoped taxes automatically include the applied taxes in each line item.\nLine item taxes must be referenced from any applicable line items.\nThe corresponding applied money is automatically computed, based on the\nset of participating line items."
                      },
                      "description": "The list of references to `OrderReturnTax` entities applied to the return line item. Each\n`OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a top-level\n`OrderReturnTax` applied to the return line item. On reads, the applied amount\nis populated."
                    },
                    "applied_discounts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": ["discount_uid"],
                        "properties": {
                          "uid": {
                            "maxLength": 60,
                            "type": "string",
                            "description": "A unique ID that identifies the applied discount only within this order."
                          },
                          "discount_uid": {
                            "minLength": 1,
                            "maxLength": 60,
                            "type": "string",
                            "description": "The `uid` of the discount that the applied discount represents. It must\nreference a discount present in the `order.discounts` field.\n\nThis field is immutable. To change which discounts apply to a line item,\nyou must delete the discount and re-add it as a new `OrderLineItemAppliedDiscount`."
                          },
                          "applied_money": {
                            "description": "The amount of money applied by the discount to the line item.",
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                              },
                              "currency": {
                                "type": "string",
                                "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                              }
                            }
                          }
                        },
                        "description": "Represents an applied portion of a discount to a line item in an order.\n\nOrder scoped discounts have automatically applied discounts present for each line item.\nLine-item scoped discounts must have applied discounts added manually for any applicable line\nitems. The corresponding applied money is automatically computed based on participating\nline items."
                      },
                      "description": "The list of references to `OrderReturnDiscount` entities applied to the return line item. Each\n`OrderLineItemAppliedDiscount` has a `discount_uid` that references the `uid` of a top-level\n`OrderReturnDiscount` applied to the return line item. On reads, the applied amount\nis populated."
                    },
                    "base_price_money": {
                      "description": "The base price for a single unit of the line item.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                        },
                        "currency": {
                          "type": "string",
                          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                        }
                      }
                    },
                    "variation_total_price_money": {
                      "description": "The total price of all item variations returned in this line item.\nThe price is calculated as `base_price_money` multiplied by `quantity` and\ndoes not include modifiers.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                        },
                        "currency": {
                          "type": "string",
                          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                        }
                      }
                    },
                    "gross_return_money": {
                      "description": "The gross return amount of money calculated as (item base price + modifiers price) * quantity.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                        },
                        "currency": {
                          "type": "string",
                          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                        }
                      }
                    },
                    "total_tax_money": {
                      "description": "The total amount of tax money to return for the line item.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                        },
                        "currency": {
                          "type": "string",
                          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                        }
                      }
                    },
                    "total_discount_money": {
                      "description": "The total amount of discount money to return for the line item.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                        },
                        "currency": {
                          "type": "string",
                          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                        }
                      }
                    },
                    "total_money": {
                      "description": "The total amount of money to return for this line item.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                        },
                        "currency": {
                          "type": "string",
                          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                        }
                      }
                    }
                  },
                  "description": "The line item being returned in an order."
                },
                "description": "A collection of line items that are being returned."
              },
              "return_service_charges": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uid": {
                      "maxLength": 60,
                      "type": "string",
                      "description": "A unique ID that identifies the return service charge only within this order."
                    },
                    "source_service_charge_uid": {
                      "maxLength": 60,
                      "type": "string",
                      "description": "The service charge `uid` from the order containing the original\nservice charge. `source_service_charge_uid` is `null` for\nunlinked returns."
                    },
                    "name": {
                      "maxLength": 255,
                      "type": "string",
                      "description": "The name of the service charge."
                    },
                    "catalog_object_id": {
                      "maxLength": 192,
                      "type": "string",
                      "description": "The catalog object ID of the associated [OrderServiceCharge](https://developer.squareup.com/reference/square_2022-03-16/objects/OrderServiceCharge)."
                    },
                    "catalog_version": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The version of the catalog object that this service charge references."
                    },
                    "percentage": {
                      "maxLength": 10,
                      "type": "string",
                      "description": "The percentage of the service charge, as a string representation of\na decimal number. For example, a value of `\"7.25\"` corresponds to a\npercentage of 7.25%.\n\nEither `percentage` or `amount_money` should be set, but not both."
                    },
                    "amount_money": {
                      "description": "The amount of a non-percentage-based service charge.\n\nEither `percentage` or `amount_money` should be set, but not both.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                        },
                        "currency": {
                          "type": "string",
                          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                        }
                      }
                    },
                    "applied_money": {
                      "description": "The amount of money applied to the order by the service charge, including\nany inclusive tax amounts, as calculated by Square.\n\n- For fixed-amount service charges, `applied_money` is equal to `amount_money`.\n- For percentage-based service charges, `applied_money` is the money calculated using the percentage.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                        },
                        "currency": {
                          "type": "string",
                          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                        }
                      }
                    },
                    "total_money": {
                      "description": "The total amount of money to collect for the service charge.\n\n__NOTE__: If an inclusive tax is applied to the service charge, `total_money`\ndoes not equal `applied_money` plus `total_tax_money` because the inclusive\ntax amount is already included in both `applied_money` and `total_tax_money`.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                        },
                        "currency": {
                          "type": "string",
                          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                        }
                      }
                    },
                    "total_tax_money": {
                      "description": "The total amount of tax money to collect for the service charge.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                        },
                        "currency": {
                          "type": "string",
                          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                        }
                      }
                    },
                    "calculation_phase": {
                      "type": "string",
                      "description": "The calculation phase after which to apply the service charge."
                    },
                    "taxable": {
                      "type": "boolean",
                      "description": "Indicates whether the surcharge can be taxed. Service charges\ncalculated in the `TOTAL_PHASE` cannot be marked as taxable."
                    },
                    "applied_taxes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": ["tax_uid"],
                        "properties": {
                          "uid": {
                            "maxLength": 60,
                            "type": "string",
                            "description": "A unique ID that identifies the applied tax only within this order."
                          },
                          "tax_uid": {
                            "minLength": 1,
                            "maxLength": 60,
                            "type": "string",
                            "description": "The `uid` of the tax for which this applied tax represents. It must reference\na tax present in the `order.taxes` field.\n\nThis field is immutable. To change which taxes apply to a line item, delete and add a new\n`OrderLineItemAppliedTax`."
                          },
                          "applied_money": {
                            "description": "The amount of money applied by the tax to the line item.",
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                              },
                              "currency": {
                                "type": "string",
                                "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                              }
                            }
                          }
                        },
                        "description": "Represents an applied portion of a tax to a line item in an order.\n\nOrder-scoped taxes automatically include the applied taxes in each line item.\nLine item taxes must be referenced from any applicable line items.\nThe corresponding applied money is automatically computed, based on the\nset of participating line items."
                      },
                      "description": "The list of references to `OrderReturnTax` entities applied to the\n`OrderReturnServiceCharge`. Each `OrderLineItemAppliedTax` has a `tax_uid`\nthat references the `uid` of a top-level `OrderReturnTax` that is being\napplied to the `OrderReturnServiceCharge`. On reads, the applied amount is\npopulated."
                    }
                  },
                  "description": "Represents the service charge applied to the original order."
                },
                "description": "A collection of service charges that are being returned."
              },
              "return_taxes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uid": {
                      "maxLength": 60,
                      "type": "string",
                      "description": "A unique ID that identifies the returned tax only within this order."
                    },
                    "source_tax_uid": {
                      "maxLength": 60,
                      "type": "string",
                      "description": "The tax `uid` from the order that contains the original tax charge."
                    },
                    "catalog_object_id": {
                      "maxLength": 192,
                      "type": "string",
                      "description": "The catalog object ID referencing [CatalogTax](https://developer.squareup.com/reference/square_2022-03-16/objects/CatalogTax)."
                    },
                    "catalog_version": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The version of the catalog object that this tax references."
                    },
                    "name": {
                      "maxLength": 255,
                      "type": "string",
                      "description": "The tax's name."
                    },
                    "type": {
                      "type": "string",
                      "description": "Indicates the calculation method used to apply the tax."
                    },
                    "percentage": {
                      "maxLength": 10,
                      "type": "string",
                      "description": "The percentage of the tax, as a string representation of a decimal number.\nFor example, a value of `\"7.25\"` corresponds to a percentage of 7.25%."
                    },
                    "applied_money": {
                      "description": "The amount of money applied by the tax in an order.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                        },
                        "currency": {
                          "type": "string",
                          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                        }
                      }
                    },
                    "scope": {
                      "type": "string",
                      "description": "Indicates the level at which the `OrderReturnTax` applies. For `ORDER` scoped\ntaxes, Square generates references in `applied_taxes` on all\n`OrderReturnLineItem`s. For `LINE_ITEM` scoped taxes, the tax is only applied to\n`OrderReturnLineItem`s with references in their `applied_discounts` field."
                    }
                  },
                  "description": "Represents a tax being returned that applies to one or more return line items in an order.\n\nFixed-amount, order-scoped taxes are distributed across all non-zero return line item totals.\nThe amount distributed to each return line item is relative to that item’s contribution to the\norder subtotal."
                },
                "description": "A collection of references to taxes being returned for an order, including the total\napplied tax amount to be returned. The taxes must reference a top-level tax ID from the source\norder."
              },
              "return_discounts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uid": {
                      "maxLength": 60,
                      "type": "string",
                      "description": "A unique ID that identifies the returned discount only within this order."
                    },
                    "source_discount_uid": {
                      "maxLength": 60,
                      "type": "string",
                      "description": "The discount `uid` from the order that contains the original application of this discount."
                    },
                    "catalog_object_id": {
                      "maxLength": 192,
                      "type": "string",
                      "description": "The catalog object ID referencing [CatalogDiscount](https://developer.squareup.com/reference/square_2022-03-16/objects/CatalogDiscount)."
                    },
                    "catalog_version": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The version of the catalog object that this discount references."
                    },
                    "name": {
                      "maxLength": 255,
                      "type": "string",
                      "description": "The discount's name."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the discount. If it is created by the API, it is `FIXED_PERCENTAGE` or `FIXED_AMOUNT`.\n\nDiscounts that do not reference a catalog object ID must have a type of\n`FIXED_PERCENTAGE` or `FIXED_AMOUNT`."
                    },
                    "percentage": {
                      "maxLength": 10,
                      "type": "string",
                      "description": "The percentage of the tax, as a string representation of a decimal number.\nA value of `\"7.25\"` corresponds to a percentage of 7.25%.\n\n`percentage` is not set for amount-based discounts."
                    },
                    "amount_money": {
                      "description": "The total declared monetary amount of the discount.\n\n`amount_money` is not set for percentage-based discounts.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                        },
                        "currency": {
                          "type": "string",
                          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                        }
                      }
                    },
                    "applied_money": {
                      "description": "The amount of discount actually applied to this line item. When an amount-based\ndiscount is at the order level, this value is different from `amount_money` because the discount\nis distributed across the line items.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                        },
                        "currency": {
                          "type": "string",
                          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                        }
                      }
                    },
                    "scope": {
                      "type": "string",
                      "description": "Indicates the level at which the `OrderReturnDiscount` applies. For `ORDER` scoped\ndiscounts, the server generates references in `applied_discounts` on all\n`OrderReturnLineItem`s. For `LINE_ITEM` scoped discounts, the discount is only applied to\n`OrderReturnLineItem`s with references in their `applied_discounts` field."
                    }
                  },
                  "description": "Represents a discount being returned that applies to one or more return line items in an\norder.\n\nFixed-amount, order-scoped discounts are distributed across all non-zero return line item totals.\nThe amount distributed to each return line item is relative to that item’s contribution to the\norder subtotal."
                },
                "description": "A collection of references to discounts being returned for an order, including the total\napplied discount amount to be returned. The discounts must reference a top-level discount ID\nfrom the source order."
              },
              "rounding_adjustment": {
                "description": "A positive or negative rounding adjustment to the total value being returned. Adjustments are commonly\nused to apply cash rounding when the minimum unit of the account is smaller than the lowest\nphysical denomination of the currency.",
                "type": "object",
                "properties": {
                  "uid": {
                    "maxLength": 60,
                    "type": "string",
                    "description": "A unique ID that identifies the rounding adjustment only within this order."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the rounding adjustment from the original sale order."
                  },
                  "amount_money": {
                    "description": "The actual rounding adjustment amount.",
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                      },
                      "currency": {
                        "type": "string",
                        "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                      }
                    }
                  }
                }
              },
              "return_amounts": {
                "description": "An aggregate monetary value being returned by this return entry.",
                "type": "object",
                "properties": {
                  "total_money": {
                    "description": "The total money.",
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                      },
                      "currency": {
                        "type": "string",
                        "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                      }
                    }
                  },
                  "tax_money": {
                    "description": "The money associated with taxes.",
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                      },
                      "currency": {
                        "type": "string",
                        "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                      }
                    }
                  },
                  "discount_money": {
                    "description": "The money associated with discounts.",
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                      },
                      "currency": {
                        "type": "string",
                        "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                      }
                    }
                  },
                  "tip_money": {
                    "description": "The money associated with tips.",
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                      },
                      "currency": {
                        "type": "string",
                        "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                      }
                    }
                  },
                  "service_charge_money": {
                    "description": "The money associated with service charges.",
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                      },
                      "currency": {
                        "type": "string",
                        "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                      }
                    }
                  }
                }
              }
            },
            "description": "The set of line items, service charges, taxes, discounts, tips, and other items being returned in an order."
          },
          "description": "A collection of items from sale orders being returned in this one. Normally part of an\nitemized return or exchange. There is exactly one `Return` object per sale `Order` being\nreferenced."
        },
        "return_amounts": {
          "description": "The rollup of the returned money amounts.",
          "type": "object",
          "properties": {
            "total_money": {
              "description": "The total money.",
              "type": "object",
              "properties": {
                "amount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                },
                "currency": {
                  "type": "string",
                  "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                }
              }
            },
            "tax_money": {
              "description": "The money associated with taxes.",
              "type": "object",
              "properties": {
                "amount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                },
                "currency": {
                  "type": "string",
                  "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                }
              }
            },
            "discount_money": {
              "description": "The money associated with discounts.",
              "type": "object",
              "properties": {
                "amount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                },
                "currency": {
                  "type": "string",
                  "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                }
              }
            },
            "tip_money": {
              "description": "The money associated with tips.",
              "type": "object",
              "properties": {
                "amount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                },
                "currency": {
                  "type": "string",
                  "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                }
              }
            },
            "service_charge_money": {
              "description": "The money associated with service charges.",
              "type": "object",
              "properties": {
                "amount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                },
                "currency": {
                  "type": "string",
                  "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                }
              }
            }
          }
        },
        "net_amounts": {
          "description": "The net money amounts (sale money - return money).",
          "type": "object",
          "properties": {
            "total_money": {
              "description": "The total money.",
              "type": "object",
              "properties": {
                "amount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                },
                "currency": {
                  "type": "string",
                  "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                }
              }
            },
            "tax_money": {
              "description": "The money associated with taxes.",
              "type": "object",
              "properties": {
                "amount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                },
                "currency": {
                  "type": "string",
                  "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                }
              }
            },
            "discount_money": {
              "description": "The money associated with discounts.",
              "type": "object",
              "properties": {
                "amount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                },
                "currency": {
                  "type": "string",
                  "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                }
              }
            },
            "tip_money": {
              "description": "The money associated with tips.",
              "type": "object",
              "properties": {
                "amount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                },
                "currency": {
                  "type": "string",
                  "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                }
              }
            },
            "service_charge_money": {
              "description": "The money associated with service charges.",
              "type": "object",
              "properties": {
                "amount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                },
                "currency": {
                  "type": "string",
                  "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                }
              }
            }
          }
        },
        "rounding_adjustment": {
          "description": "A positive rounding adjustment to the total of the order. This adjustment is commonly\nused to apply cash rounding when the minimum unit of account is smaller than the lowest physical\ndenomination of the currency.",
          "type": "object",
          "properties": {
            "uid": {
              "maxLength": 60,
              "type": "string",
              "description": "A unique ID that identifies the rounding adjustment only within this order."
            },
            "name": {
              "type": "string",
              "description": "The name of the rounding adjustment from the original sale order."
            },
            "amount_money": {
              "description": "The actual rounding adjustment amount.",
              "type": "object",
              "properties": {
                "amount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                },
                "currency": {
                  "type": "string",
                  "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                }
              }
            }
          }
        },
        "tenders": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["type"],
            "properties": {
              "id": {
                "maxLength": 192,
                "type": "string",
                "description": "The tender's unique ID."
              },
              "location_id": {
                "maxLength": 50,
                "type": "string",
                "description": "The ID of the transaction's associated location."
              },
              "transaction_id": {
                "maxLength": 192,
                "type": "string",
                "description": "The ID of the tender's associated transaction."
              },
              "created_at": {
                "maxLength": 32,
                "type": "string",
                "description": "The timestamp for when the tender was created, in RFC 3339 format."
              },
              "note": {
                "maxLength": 500,
                "type": "string",
                "description": "An optional note associated with the tender at the time of payment."
              },
              "amount_money": {
                "description": "The total amount of the tender, including `tip_money`. If the tender has a `payment_id`,\nthe `total_money` of the corresponding [Payment](https://developer.squareup.com/reference/square_2022-03-16/objects/Payment) will be equal to the\n`amount_money` of the tender.",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                  },
                  "currency": {
                    "type": "string",
                    "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                  }
                }
              },
              "tip_money": {
                "description": "The tip's amount of the tender.",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                  },
                  "currency": {
                    "type": "string",
                    "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                  }
                }
              },
              "processing_fee_money": {
                "description": "The amount of any Square processing fees applied to the tender.\n\nThis field is not immediately populated when a new transaction is created.\nIt is usually available after about ten seconds.",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                  },
                  "currency": {
                    "type": "string",
                    "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                  }
                }
              },
              "customer_id": {
                "maxLength": 191,
                "type": "string",
                "description": "If the tender is associated with a customer or represents a customer's card on file,\nthis is the ID of the associated customer."
              },
              "type": {
                "type": "string",
                "description": "The type of tender, such as `CARD` or `CASH`."
              },
              "card_details": {
                "description": "The details of the card tender.\n\nThis value is present only if the value of `type` is `CARD`.",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "The credit card payment's current state (such as `AUTHORIZED` or\n`CAPTURED`). See [TenderCardDetailsStatus](https://developer.squareup.com/reference/square_2022-03-16/enums/TenderCardDetailsStatus)\nfor possible values."
                  },
                  "card": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Unique ID for this card. Generated by Square."
                      },
                      "card_brand": {
                        "type": "string",
                        "description": "The card's brand."
                      },
                      "last_4": {
                        "maxLength": 4,
                        "type": "string",
                        "description": "The last 4 digits of the card number."
                      },
                      "exp_month": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The expiration month of the associated card as an integer between 1 and 12."
                      },
                      "exp_year": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The four-digit year of the card's expiration date."
                      },
                      "cardholder_name": {
                        "maxLength": 96,
                        "type": "string",
                        "description": "The name of the cardholder."
                      },
                      "billing_address": {
                        "description": "The billing address for this card.",
                        "type": "object",
                        "properties": {
                          "address_line_1": {
                            "type": "string",
                            "description": "The first line of the address.\n\nFields that start with `address_line` provide the address's most specific\ndetails, like street number, street name, and building name. They do *not*\nprovide less specific details like city, state/province, or country (these\ndetails are provided in other fields)."
                          },
                          "address_line_2": {
                            "type": "string",
                            "description": "The second line of the address, if any."
                          },
                          "address_line_3": {
                            "type": "string",
                            "description": "The third line of the address, if any."
                          },
                          "locality": {
                            "type": "string",
                            "description": "The city or town of the address. For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses)."
                          },
                          "sublocality": {
                            "type": "string",
                            "description": "A civil region within the address's `locality`, if any."
                          },
                          "administrative_district_level_1": {
                            "type": "string",
                            "description": "A civil entity within the address's country. In the US, this\nis the state. For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses)."
                          },
                          "postal_code": {
                            "type": "string",
                            "description": "The address's postal code. For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses)."
                          },
                          "country": {
                            "type": "string",
                            "description": "The address's country, in the two-letter format of ISO 3166. For example, `US` or `FR`."
                          }
                        }
                      },
                      "fingerprint": {
                        "maxLength": 255,
                        "type": "string",
                        "description": "Intended as a Square-assigned identifier, based\non the card number, to identify the card across multiple locations within a\nsingle application."
                      },
                      "customer_id": {
                        "type": "string",
                        "description": "**Required** The ID of a customer created using the Customers API to be associated with the card."
                      },
                      "merchant_id": {
                        "type": "string",
                        "description": "The ID of the merchant associated with the card."
                      },
                      "reference_id": {
                        "maxLength": 128,
                        "type": "string",
                        "description": "An optional user-defined reference ID that associates this card with\nanother entity in an external system. For example, a customer ID from an\nexternal customer management system."
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Indicates whether or not a card can be used for payments."
                      },
                      "card_type": {
                        "type": "string",
                        "description": "The type of the card.\nThe Card object includes this field only in response to Payments API calls."
                      },
                      "prepaid_type": {
                        "type": "string",
                        "description": "Indicates whether the Card is prepaid or not.\nThe Card object includes this field only in response to Payments API calls."
                      },
                      "bin": {
                        "maxLength": 6,
                        "type": "string",
                        "description": "The first six digits of the card number, known as the Bank Identification Number (BIN). Only the Payments API\nreturns this field."
                      },
                      "version": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Current version number of the card. Increments with each card update. Requests to update an\nexisting Card object will be rejected unless the version in the request matches the current\nversion for the Card."
                      }
                    },
                    "description": "Represents the payment details of a card to be used for payments. These\ndetails are determined by the payment token generated by Web Payments SDK."
                  },
                  "entry_method": {
                    "type": "string",
                    "description": "The method used to enter the card's details for the transaction."
                  }
                }
              },
              "cash_details": {
                "description": "The details of the cash tender.\n\nThis value is present only if the value of `type` is `CASH`.",
                "type": "object",
                "properties": {
                  "buyer_tendered_money": {
                    "description": "The total amount of cash provided by the buyer, before change is given.",
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                      },
                      "currency": {
                        "type": "string",
                        "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                      }
                    }
                  },
                  "change_back_money": {
                    "description": "The amount of change returned to the buyer.",
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                      },
                      "currency": {
                        "type": "string",
                        "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                      }
                    }
                  }
                }
              },
              "additional_recipients": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["location_id", "amount_money"],
                  "properties": {
                    "location_id": {
                      "minLength": 1,
                      "maxLength": 50,
                      "type": "string",
                      "description": "The location ID for a recipient (other than the merchant) receiving a portion of this tender."
                    },
                    "description": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "The description of the additional recipient."
                    },
                    "amount_money": {
                      "description": "The amount of money distributed to the recipient.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                        },
                        "currency": {
                          "type": "string",
                          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                        }
                      }
                    },
                    "receivable_id": {
                      "maxLength": 192,
                      "type": "string",
                      "description": "The unique ID for this [AdditionalRecipientReceivable](https://developer.squareup.com/reference/square_2022-03-16/objects/AdditionalRecipientReceivable), assigned by the server."
                    }
                  },
                  "description": "Represents an additional recipient (other than the merchant) receiving a portion of this tender."
                },
                "description": "Additional recipients (other than the merchant) receiving a portion of this tender.\nFor example, fees assessed on the purchase by a third party integration."
              },
              "payment_id": {
                "maxLength": 192,
                "type": "string",
                "description": "The ID of the [Payment](https://developer.squareup.com/reference/square_2022-03-16/objects/Payment) that corresponds to this tender.\nThis value is only present for payments created with the v2 Payments API."
              }
            },
            "description": "Represents a tender (i.e., a method of payment) used in a Square transaction."
          },
          "description": "The tenders that were used to pay for the order."
        },
        "refunds": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["id", "location_id", "transaction_id", "tender_id", "reason", "amount_money", "status"],
            "properties": {
              "id": {
                "maxLength": 255,
                "type": "string",
                "description": "The refund's unique ID."
              },
              "location_id": {
                "maxLength": 50,
                "type": "string",
                "description": "The ID of the refund's associated location."
              },
              "transaction_id": {
                "maxLength": 192,
                "type": "string",
                "description": "The ID of the transaction that the refunded tender is part of."
              },
              "tender_id": {
                "maxLength": 192,
                "type": "string",
                "description": "The ID of the refunded tender."
              },
              "created_at": {
                "maxLength": 32,
                "type": "string",
                "description": "The timestamp for when the refund was created, in RFC 3339 format."
              },
              "reason": {
                "maxLength": 192,
                "type": "string",
                "description": "The reason for the refund being issued."
              },
              "amount_money": {
                "description": "The amount of money refunded to the buyer.",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                  },
                  "currency": {
                    "type": "string",
                    "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                  }
                }
              },
              "status": {
                "type": "string",
                "description": "The current status of the refund (`PENDING`, `APPROVED`, `REJECTED`,\nor `FAILED`)."
              },
              "processing_fee_money": {
                "description": "The amount of Square processing fee money refunded to the *merchant*.",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                  },
                  "currency": {
                    "type": "string",
                    "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                  }
                }
              },
              "additional_recipients": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["location_id", "amount_money"],
                  "properties": {
                    "location_id": {
                      "minLength": 1,
                      "maxLength": 50,
                      "type": "string",
                      "description": "The location ID for a recipient (other than the merchant) receiving a portion of this tender."
                    },
                    "description": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "The description of the additional recipient."
                    },
                    "amount_money": {
                      "description": "The amount of money distributed to the recipient.",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
                        },
                        "currency": {
                          "type": "string",
                          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
                        }
                      }
                    },
                    "receivable_id": {
                      "maxLength": 192,
                      "type": "string",
                      "description": "The unique ID for this [AdditionalRecipientReceivable](https://developer.squareup.com/reference/square_2022-03-16/objects/AdditionalRecipientReceivable), assigned by the server."
                    }
                  },
                  "description": "Represents an additional recipient (other than the merchant) receiving a portion of this tender."
                },
                "description": "Additional recipients (other than the merchant) receiving a portion of this refund.\nFor example, fees assessed on a refund of a purchase by a third party integration."
              }
            },
            "description": "Represents a refund processed for a Square transaction."
          },
          "description": "The refunds that are part of this order."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-defined data attached to this order. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (such as personally\nidentifiable information or card details).\n\nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a ':' character.\n\nValues have a maximum length of 255 characters.\n\nAn application can have up to 10 entries per metadata field.\n\nEntries written by applications are private and can only be read or modified by the same\napplication.\n\nFor more information, see  [Metadata](https://developer.squareup.com/docs/build-basics/metadata)."
        },
        "created_at": {
          "type": "string",
          "description": "The timestamp for when the order was created, in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\")."
        },
        "updated_at": {
          "type": "string",
          "description": "The timestamp for when the order was last updated, in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\")."
        },
        "closed_at": {
          "type": "string",
          "description": "The timestamp for when the order reached a terminal [state](https://developer.squareup.com/reference/square_2022-03-16/enums/OrderState), in RFC 3339 format (for example \"2016-09-04T23:59:33.123Z\")."
        },
        "state": {
          "type": "string",
          "description": "The current state of the order."
        },
        "version": {
          "type": "integer",
          "description": "The version number, which is incremented each time an update is committed to the order.\nOrders not created through the API do not include a version number and\ntherefore cannot be updated.\n\n[Read more about working with versions](https://developer.squareup.com/docs/orders-api/manage-orders#update-orders)."
        },
        "total_money": {
          "description": "The total amount of money to collect for the order.",
          "type": "object",
          "properties": {
            "amount": {
              "type": "integer",
              "format": "int64",
              "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
            },
            "currency": {
              "type": "string",
              "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
            }
          }
        },
        "total_tax_money": {
          "description": "The total amount of tax money to collect for the order.",
          "type": "object",
          "properties": {
            "amount": {
              "type": "integer",
              "format": "int64",
              "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
            },
            "currency": {
              "type": "string",
              "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
            }
          }
        },
        "total_discount_money": {
          "description": "The total amount of discount money to collect for the order.",
          "type": "object",
          "properties": {
            "amount": {
              "type": "integer",
              "format": "int64",
              "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
            },
            "currency": {
              "type": "string",
              "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
            }
          }
        },
        "total_tip_money": {
          "description": "The total amount of tip money to collect for the order.",
          "type": "object",
          "properties": {
            "amount": {
              "type": "integer",
              "format": "int64",
              "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
            },
            "currency": {
              "type": "string",
              "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
            }
          }
        },
        "total_service_charge_money": {
          "description": "The total amount of money collected in service charges for the order.\n\nNote: `total_service_charge_money` is the sum of `applied_money` fields for each individual\nservice charge. Therefore, `total_service_charge_money` only includes inclusive tax amounts,\nnot additive tax amounts.",
          "type": "object",
          "properties": {
            "amount": {
              "type": "integer",
              "format": "int64",
              "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
            },
            "currency": {
              "type": "string",
              "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
            }
          }
        },
        "ticket_name": {
          "maxLength": 30,
          "type": "string",
          "description": "A short-term identifier for the order (such as a customer first name, table number, or\nauto-generated order number that resets daily). For orders created in Square Point of Sale, the `ticket_name` is\nprinted on in-person tickets and stubs. It converts to the `kitchen_printing.name` field in the\nbill cart feature details."
        },
        "pricing_options": {
          "description": "Pricing options for an order. The options affect how the order's price is calculated.\nThey can be used, for example, to apply automatic price adjustments that are based on \npreconfigured [pricing rules](https://developer.squareup.com/reference/square_2022-03-16/objects/CatalogPricingRule).",
          "type": "object",
          "properties": {
            "auto_apply_discounts": {
              "type": "boolean",
              "description": "The option to determine whether pricing rule-based\ndiscounts are automatically applied to an order."
            },
            "auto_apply_taxes": {
              "type": "boolean",
              "description": "The option to determine whether rule-based taxes are automatically\napplied to an order when the criteria of the corresponding rules are met."
            }
          }
        },
        "rewards": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["id", "reward_tier_id"],
            "properties": {
              "id": {
                "minLength": 1,
                "type": "string",
                "description": "The identifier of the reward."
              },
              "reward_tier_id": {
                "minLength": 1,
                "type": "string",
                "description": "The identifier of the reward tier corresponding to this reward."
              }
            },
            "description": "Represents a reward that can be applied to an order if the necessary\nreward tier criteria are met. Rewards are created through the Loyalty API."
          },
          "description": "A set-like list of Rewards that have been added to the Order."
        }
      }
    },
    "created_at": {
      "type": "string",
      "description": "The time when the checkout was created, in RFC 3339 format."
    },
    "additional_recipients": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["location_id", "amount_money"],
        "properties": {
          "location_id": {
            "minLength": 1,
            "maxLength": 50,
            "type": "string",
            "description": "The location ID for a recipient (other than the merchant) receiving a portion of this tender."
          },
          "description": {
            "maxLength": 100,
            "type": "string",
            "description": "The description of the additional recipient."
          },
          "amount_money": {
            "description": "The amount of money distributed to the recipient.",
            "type": "object",
            "properties": {
              "amount": {
                "type": "integer",
                "format": "int64",
                "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
              },
              "currency": {
                "type": "string",
                "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
              }
            }
          },
          "receivable_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The unique ID for this [AdditionalRecipientReceivable](https://developer.squareup.com/reference/square_2022-03-16/objects/AdditionalRecipientReceivable), assigned by the server."
          }
        },
        "description": "Represents an additional recipient (other than the merchant) receiving a portion of this tender."
      },
      "description": "Additional recipients (other than the merchant) receiving a portion of this checkout.\nFor example, fees assessed on the purchase by a third party integration."
    }
  },
  "description": "Square Checkout lets merchants accept online payments for supported\npayment types using a checkout workflow hosted on squareup.com.",
  "default": {
    "id": "string",
    "checkout_page_url": "string",
    "ask_for_shipping_address": true,
    "merchant_support_email": "string",
    "pre_populate_buyer_email": "string",
    "pre_populate_shipping_address": {
      "address_line_1": "string",
      "address_line_2": "string",
      "address_line_3": "string",
      "locality": "string",
      "sublocality": "string",
      "administrative_district_level_1": "string",
      "postal_code": "string",
      "country": "string"
    },
    "redirect_url": "string",
    "order": {
      "id": "string",
      "location_id": "string",
      "reference_id": "string",
      "source": {
        "name": "string"
      },
      "customer_id": "string",
      "line_items": [
        {
          "uid": "string",
          "name": "string",
          "quantity": "string",
          "quantity_unit": {
            "measurement_unit": {
              "custom_unit": {
                "name": "string",
                "abbreviation": "string"
              },
              "area_unit": "string",
              "length_unit": "string",
              "volume_unit": "string",
              "weight_unit": "string",
              "generic_unit": "string",
              "time_unit": "string",
              "type": "string"
            },
            "precision": 1,
            "catalog_object_id": "string",
            "catalog_version": 1
          },
          "note": "string",
          "catalog_object_id": "string",
          "catalog_version": 1,
          "variation_name": "string",
          "item_type": "string",
          "metadata": {},
          "modifiers": [
            {
              "uid": "string",
              "catalog_object_id": "string",
              "catalog_version": 1,
              "name": "string",
              "base_price_money": {
                "amount": 1,
                "currency": "string"
              },
              "total_price_money": {
                "amount": 1,
                "currency": "string"
              },
              "metadata": {}
            }
          ],
          "applied_taxes": [
            {
              "uid": "string",
              "tax_uid": "string",
              "applied_money": {
                "amount": 1,
                "currency": "string"
              }
            }
          ],
          "applied_discounts": [
            {
              "uid": "string",
              "discount_uid": "string",
              "applied_money": {
                "amount": 1,
                "currency": "string"
              }
            }
          ],
          "base_price_money": {
            "amount": 1,
            "currency": "string"
          },
          "variation_total_price_money": {
            "amount": 1,
            "currency": "string"
          },
          "gross_sales_money": {
            "amount": 1,
            "currency": "string"
          },
          "total_tax_money": {
            "amount": 1,
            "currency": "string"
          },
          "total_discount_money": {
            "amount": 1,
            "currency": "string"
          },
          "total_money": {
            "amount": 1,
            "currency": "string"
          },
          "pricing_blocklists": {
            "blocked_discounts": [
              {
                "uid": "string",
                "discount_uid": "string",
                "discount_catalog_object_id": "string"
              }
            ],
            "blocked_taxes": [
              {
                "uid": "string",
                "tax_uid": "string",
                "tax_catalog_object_id": "string"
              }
            ]
          }
        }
      ],
      "taxes": [
        {
          "uid": "string",
          "catalog_object_id": "string",
          "catalog_version": 1,
          "name": "string",
          "type": "string",
          "percentage": "string",
          "metadata": {},
          "applied_money": {
            "amount": 1,
            "currency": "string"
          },
          "scope": "string",
          "auto_applied": true
        }
      ],
      "discounts": [
        {
          "uid": "string",
          "catalog_object_id": "string",
          "catalog_version": 1,
          "name": "string",
          "type": "string",
          "percentage": "string",
          "amount_money": {
            "amount": 1,
            "currency": "string"
          },
          "applied_money": {
            "amount": 1,
            "currency": "string"
          },
          "metadata": {},
          "scope": "string",
          "reward_ids": ["string"],
          "pricing_rule_id": "string"
        }
      ],
      "service_charges": [
        {
          "uid": "string",
          "name": "string",
          "catalog_object_id": "string",
          "catalog_version": 1,
          "percentage": "string",
          "amount_money": {
            "amount": 1,
            "currency": "string"
          },
          "applied_money": {
            "amount": 1,
            "currency": "string"
          },
          "total_money": {
            "amount": 1,
            "currency": "string"
          },
          "total_tax_money": {
            "amount": 1,
            "currency": "string"
          },
          "calculation_phase": "string",
          "taxable": true,
          "applied_taxes": [
            {
              "uid": "string",
              "tax_uid": "string",
              "applied_money": {
                "amount": 1,
                "currency": "string"
              }
            }
          ],
          "metadata": {},
          "type": "string"
        }
      ],
      "fulfillments": [
        {
          "uid": "string",
          "type": "string",
          "state": "string",
          "line_item_application": "string",
          "entries": [
            {
              "uid": "string",
              "line_item_uid": "string",
              "quantity": "string",
              "metadata": {}
            }
          ],
          "metadata": {},
          "pickup_details": {
            "recipient": {
              "customer_id": "string",
              "display_name": "string",
              "email_address": "string",
              "phone_number": "string",
              "address": {
                "address_line_1": "string",
                "address_line_2": "string",
                "address_line_3": "string",
                "locality": "string",
                "sublocality": "string",
                "administrative_district_level_1": "string",
                "postal_code": "string",
                "country": "string"
              }
            },
            "expires_at": "string",
            "auto_complete_duration": "string",
            "schedule_type": "string",
            "pickup_at": "string",
            "pickup_window_duration": "string",
            "prep_time_duration": "string",
            "note": "string",
            "placed_at": "string",
            "accepted_at": "string",
            "rejected_at": "string",
            "ready_at": "string",
            "expired_at": "string",
            "picked_up_at": "string",
            "canceled_at": "string",
            "cancel_reason": "string",
            "is_curbside_pickup": true,
            "curbside_pickup_details": {
              "curbside_details": "string",
              "buyer_arrived_at": "string"
            }
          },
          "shipment_details": {
            "recipient": {
              "customer_id": "string",
              "display_name": "string",
              "email_address": "string",
              "phone_number": "string",
              "address": {
                "address_line_1": "string",
                "address_line_2": "string",
                "address_line_3": "string",
                "locality": "string",
                "sublocality": "string",
                "administrative_district_level_1": "string",
                "postal_code": "string",
                "country": "string"
              }
            },
            "carrier": "string",
            "shipping_note": "string",
            "shipping_type": "string",
            "tracking_number": "string",
            "tracking_url": "string",
            "placed_at": "string",
            "in_progress_at": "string",
            "packaged_at": "string",
            "expected_shipped_at": "string",
            "shipped_at": "string",
            "canceled_at": "string",
            "cancel_reason": "string",
            "failed_at": "string",
            "failure_reason": "string"
          }
        }
      ],
      "returns": [
        {
          "uid": "string",
          "source_order_id": "string",
          "return_line_items": [
            {
              "uid": "string",
              "source_line_item_uid": "string",
              "name": "string",
              "quantity": "string",
              "quantity_unit": {
                "measurement_unit": {
                  "custom_unit": {
                    "name": "string",
                    "abbreviation": "string"
                  },
                  "area_unit": "string",
                  "length_unit": "string",
                  "volume_unit": "string",
                  "weight_unit": "string",
                  "generic_unit": "string",
                  "time_unit": "string",
                  "type": "string"
                },
                "precision": 1,
                "catalog_object_id": "string",
                "catalog_version": 1
              },
              "note": "string",
              "catalog_object_id": "string",
              "catalog_version": 1,
              "variation_name": "string",
              "item_type": "string",
              "return_modifiers": [
                {
                  "uid": "string",
                  "source_modifier_uid": "string",
                  "catalog_object_id": "string",
                  "catalog_version": 1,
                  "name": "string",
                  "base_price_money": {
                    "amount": 1,
                    "currency": "string"
                  },
                  "total_price_money": {
                    "amount": 1,
                    "currency": "string"
                  }
                }
              ],
              "applied_taxes": [
                {
                  "uid": "string",
                  "tax_uid": "string",
                  "applied_money": {
                    "amount": 1,
                    "currency": "string"
                  }
                }
              ],
              "applied_discounts": [
                {
                  "uid": "string",
                  "discount_uid": "string",
                  "applied_money": {
                    "amount": 1,
                    "currency": "string"
                  }
                }
              ],
              "base_price_money": {
                "amount": 1,
                "currency": "string"
              },
              "variation_total_price_money": {
                "amount": 1,
                "currency": "string"
              },
              "gross_return_money": {
                "amount": 1,
                "currency": "string"
              },
              "total_tax_money": {
                "amount": 1,
                "currency": "string"
              },
              "total_discount_money": {
                "amount": 1,
                "currency": "string"
              },
              "total_money": {
                "amount": 1,
                "currency": "string"
              }
            }
          ],
          "return_service_charges": [
            {
              "uid": "string",
              "source_service_charge_uid": "string",
              "name": "string",
              "catalog_object_id": "string",
              "catalog_version": 1,
              "percentage": "string",
              "amount_money": {
                "amount": 1,
                "currency": "string"
              },
              "applied_money": {
                "amount": 1,
                "currency": "string"
              },
              "total_money": {
                "amount": 1,
                "currency": "string"
              },
              "total_tax_money": {
                "amount": 1,
                "currency": "string"
              },
              "calculation_phase": "string",
              "taxable": true,
              "applied_taxes": [
                {
                  "uid": "string",
                  "tax_uid": "string",
                  "applied_money": {
                    "amount": 1,
                    "currency": "string"
                  }
                }
              ]
            }
          ],
          "return_taxes": [
            {
              "uid": "string",
              "source_tax_uid": "string",
              "catalog_object_id": "string",
              "catalog_version": 1,
              "name": "string",
              "type": "string",
              "percentage": "string",
              "applied_money": {
                "amount": 1,
                "currency": "string"
              },
              "scope": "string"
            }
          ],
          "return_discounts": [
            {
              "uid": "string",
              "source_discount_uid": "string",
              "catalog_object_id": "string",
              "catalog_version": 1,
              "name": "string",
              "type": "string",
              "percentage": "string",
              "amount_money": {
                "amount": 1,
                "currency": "string"
              },
              "applied_money": {
                "amount": 1,
                "currency": "string"
              },
              "scope": "string"
            }
          ],
          "rounding_adjustment": {
            "uid": "string",
            "name": "string",
            "amount_money": {
              "amount": 1,
              "currency": "string"
            }
          },
          "return_amounts": {
            "total_money": {
              "amount": 1,
              "currency": "string"
            },
            "tax_money": {
              "amount": 1,
              "currency": "string"
            },
            "discount_money": {
              "amount": 1,
              "currency": "string"
            },
            "tip_money": {
              "amount": 1,
              "currency": "string"
            },
            "service_charge_money": {
              "amount": 1,
              "currency": "string"
            }
          }
        }
      ],
      "return_amounts": {
        "total_money": {
          "amount": 1,
          "currency": "string"
        },
        "tax_money": {
          "amount": 1,
          "currency": "string"
        },
        "discount_money": {
          "amount": 1,
          "currency": "string"
        },
        "tip_money": {
          "amount": 1,
          "currency": "string"
        },
        "service_charge_money": {
          "amount": 1,
          "currency": "string"
        }
      },
      "net_amounts": {
        "total_money": {
          "amount": 1,
          "currency": "string"
        },
        "tax_money": {
          "amount": 1,
          "currency": "string"
        },
        "discount_money": {
          "amount": 1,
          "currency": "string"
        },
        "tip_money": {
          "amount": 1,
          "currency": "string"
        },
        "service_charge_money": {
          "amount": 1,
          "currency": "string"
        }
      },
      "rounding_adjustment": {
        "uid": "string",
        "name": "string",
        "amount_money": {
          "amount": 1,
          "currency": "string"
        }
      },
      "tenders": [
        {
          "id": "string",
          "location_id": "string",
          "transaction_id": "string",
          "created_at": "string",
          "note": "string",
          "amount_money": {
            "amount": 1,
            "currency": "string"
          },
          "tip_money": {
            "amount": 1,
            "currency": "string"
          },
          "processing_fee_money": {
            "amount": 1,
            "currency": "string"
          },
          "customer_id": "string",
          "type": "string",
          "card_details": {
            "status": "string",
            "card": {
              "id": "string",
              "card_brand": "string",
              "last_4": "stri",
              "exp_month": 1,
              "exp_year": 1,
              "cardholder_name": "string",
              "billing_address": {
                "address_line_1": "string",
                "address_line_2": "string",
                "address_line_3": "string",
                "locality": "string",
                "sublocality": "string",
                "administrative_district_level_1": "string",
                "postal_code": "string",
                "country": "string"
              },
              "fingerprint": "string",
              "customer_id": "string",
              "merchant_id": "string",
              "reference_id": "string",
              "enabled": true,
              "card_type": "string",
              "prepaid_type": "string",
              "bin": "string",
              "version": 1
            },
            "entry_method": "string"
          },
          "cash_details": {
            "buyer_tendered_money": {
              "amount": 1,
              "currency": "string"
            },
            "change_back_money": {
              "amount": 1,
              "currency": "string"
            }
          },
          "additional_recipients": [
            {
              "location_id": "string",
              "description": "string",
              "amount_money": {
                "amount": 1,
                "currency": "string"
              },
              "receivable_id": "string"
            }
          ],
          "payment_id": "string"
        }
      ],
      "refunds": [
        {
          "id": "string",
          "location_id": "string",
          "transaction_id": "string",
          "tender_id": "string",
          "created_at": "string",
          "reason": "string",
          "amount_money": {
            "amount": 1,
            "currency": "string"
          },
          "status": "string",
          "processing_fee_money": {
            "amount": 1,
            "currency": "string"
          },
          "additional_recipients": [
            {
              "location_id": "string",
              "description": "string",
              "amount_money": {
                "amount": 1,
                "currency": "string"
              },
              "receivable_id": "string"
            }
          ]
        }
      ],
      "metadata": {},
      "created_at": "string",
      "updated_at": "string",
      "closed_at": "string",
      "state": "string",
      "version": 1,
      "total_money": {
        "amount": 1,
        "currency": "string"
      },
      "total_tax_money": {
        "amount": 1,
        "currency": "string"
      },
      "total_discount_money": {
        "amount": 1,
        "currency": "string"
      },
      "total_tip_money": {
        "amount": 1,
        "currency": "string"
      },
      "total_service_charge_money": {
        "amount": 1,
        "currency": "string"
      },
      "ticket_name": "string",
      "pricing_options": {
        "auto_apply_discounts": true,
        "auto_apply_taxes": true
      },
      "rewards": [
        {
          "id": "string",
          "reward_tier_id": "string"
        }
      ]
    },
    "created_at": "string",
    "additional_recipients": [
      {
        "location_id": "string",
        "description": "string",
        "amount_money": {
          "amount": 1,
          "currency": "string"
        },
        "receivable_id": "string"
      }
    ]
  },
  "$schema": "https://json-schema.org/draft/2020-12/schema"
}
