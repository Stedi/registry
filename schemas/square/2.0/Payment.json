{
  "type": "object",
  "properties": {
    "id": {
      "maxLength": 192,
      "type": "string",
      "description": "A unique ID for the payment."
    },
    "created_at": {
      "maxLength": 32,
      "type": "string",
      "description": "The timestamp of when the payment was created, in RFC 3339 format."
    },
    "updated_at": {
      "maxLength": 32,
      "type": "string",
      "description": "The timestamp of when the payment was last updated, in RFC 3339 format."
    },
    "amount_money": {
      "description": "The amount processed for this payment, not including `tip_money`.\n\nThe amount is specified in the smallest denomination of the applicable currency (for example,\nUS dollar amounts are specified in cents). For more information, see\n[Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts).",
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64",
          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
        },
        "currency": {
          "type": "string",
          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
        }
      }
    },
    "tip_money": {
      "description": "The amount designated as a tip. \n\nThis amount is specified in the smallest denomination of the applicable currency (for example,\nUS dollar amounts are specified in cents). For more information, see\n[Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts).",
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64",
          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
        },
        "currency": {
          "type": "string",
          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
        }
      }
    },
    "total_money": {
      "description": "The total amount for the payment, including `amount_money` and `tip_money`.\nThis amount is specified in the smallest denomination of the applicable currency (for example,\nUS dollar amounts are specified in cents). For more information, see\n[Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts).",
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64",
          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
        },
        "currency": {
          "type": "string",
          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
        }
      }
    },
    "app_fee_money": {
      "description": "The amount the developer is taking as a fee for facilitating the payment on behalf\nof the seller. This amount is specified in the smallest denomination of the applicable currency\n(for example, US dollar amounts are specified in cents). For more information,\nsee [Take Payments and Collect Fees](https://developer.squareup.com/docs/payments-api/take-payments-and-collect-fees).\n\nThe amount cannot be more than 90% of the `total_money` value.\n\nTo set this field, `PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS` OAuth permission is required.\nFor more information, see [Permissions](https://developer.squareup.com/docs/payments-api/take-payments-and-collect-fees#permissions).",
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64",
          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
        },
        "currency": {
          "type": "string",
          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
        }
      }
    },
    "approved_money": {
      "description": "The initial amount of money approved for this payment.",
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64",
          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
        },
        "currency": {
          "type": "string",
          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
        }
      }
    },
    "processing_fee": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "effective_at": {
            "type": "string",
            "description": "The timestamp of when the fee takes effect, in RFC 3339 format."
          },
          "type": {
            "type": "string",
            "description": "The type of fee assessed or adjusted. The fee type can be `INITIAL` or `ADJUSTMENT`."
          },
          "amount_money": {
            "description": "The fee amount, which might be negative, that is assessed or adjusted by Square.\n\nPositive values represent funds being assessed, while negative values represent\nfunds being returned.",
            "type": "object",
            "properties": {
              "amount": {
                "type": "integer",
                "format": "int64",
                "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
              },
              "currency": {
                "type": "string",
                "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
              }
            }
          }
        },
        "description": "Represents the Square processing fee."
      },
      "description": "The processing fees and fee adjustments assessed by Square for this payment."
    },
    "refunded_money": {
      "description": "The total amount of the payment refunded to date. \n\nThis amount is specified in the smallest denomination of the applicable currency (for example,\nUS dollar amounts are specified in cents).",
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64",
          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
        },
        "currency": {
          "type": "string",
          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
        }
      }
    },
    "status": {
      "maxLength": 50,
      "type": "string",
      "description": "Indicates whether the payment is APPROVED, PENDING, COMPLETED, CANCELED, or FAILED."
    },
    "delay_duration": {
      "type": "string",
      "description": "The duration of time after the payment's creation when Square automatically applies the\n`delay_action` to the payment. This automatic `delay_action` applies only to payments that\ndo not reach a terminal state (COMPLETED, CANCELED, or FAILED) before the `delay_duration`\ntime period.\n\nThis field is specified as a time duration, in RFC 3339 format.\n\nNotes:\nThis feature is only supported for card payments.\n\nDefault:\n\n- Card-present payments: \"PT36H\" (36 hours) from the creation time.\n- Card-not-present payments: \"P7D\" (7 days) from the creation time."
    },
    "delay_action": {
      "type": "string",
      "description": "The action to be applied to the payment when the `delay_duration` has elapsed. This field\nis read-only.\n\nCurrent values include `CANCEL`."
    },
    "delayed_until": {
      "type": "string",
      "description": "The read-only timestamp of when the `delay_action` is automatically applied,\nin RFC 3339 format.\n\nNote that this field is calculated by summing the payment's `delay_duration` and `created_at`\nfields. The `created_at` field is generated by Square and might not exactly match the\ntime on your local machine."
    },
    "source_type": {
      "maxLength": 50,
      "type": "string",
      "description": "The source type for this payment.\n\nCurrent values include `CARD`, `BANK_ACCOUNT`, `WALLET`, `BUY_NOW_PAY_LATER`, `CASH`, or\n`EXTERNAL`. For information about these payment source types, \nsee [Take Payments](https://developer.squareup.com/docs/payments-api/take-payments)."
    },
    "card_details": {
      "description": "Details about a card payment. These details are only populated if the source_type is `CARD`.",
      "type": "object",
      "properties": {
        "status": {
          "maxLength": 50,
          "type": "string",
          "description": "The card payment's current state. The state can be AUTHORIZED, CAPTURED, VOIDED, or\nFAILED."
        },
        "card": {
          "type": "object",
          "properties": {
            "id": {
              "maxLength": 64,
              "type": "string",
              "description": "Unique ID for this card. Generated by Square."
            },
            "card_brand": {
              "type": "string",
              "description": "The card's brand."
            },
            "last_4": {
              "maxLength": 4,
              "type": "string",
              "description": "The last 4 digits of the card number."
            },
            "exp_month": {
              "type": "integer",
              "format": "int64",
              "description": "The expiration month of the associated card as an integer between 1 and 12."
            },
            "exp_year": {
              "type": "integer",
              "format": "int64",
              "description": "The four-digit year of the card's expiration date."
            },
            "cardholder_name": {
              "maxLength": 96,
              "type": "string",
              "description": "The name of the cardholder."
            },
            "billing_address": {
              "description": "The billing address for this card.",
              "type": "object",
              "properties": {
                "address_line_1": {
                  "type": "string",
                  "description": "The first line of the address.\n\nFields that start with `address_line` provide the address's most specific\ndetails, like street number, street name, and building name. They do *not*\nprovide less specific details like city, state/province, or country (these\ndetails are provided in other fields)."
                },
                "address_line_2": {
                  "type": "string",
                  "description": "The second line of the address, if any."
                },
                "address_line_3": {
                  "type": "string",
                  "description": "The third line of the address, if any."
                },
                "locality": {
                  "type": "string",
                  "description": "The city or town of the address. For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses)."
                },
                "sublocality": {
                  "type": "string",
                  "description": "A civil region within the address's `locality`, if any."
                },
                "administrative_district_level_1": {
                  "type": "string",
                  "description": "A civil entity within the address's country. In the US, this\nis the state. For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses)."
                },
                "postal_code": {
                  "type": "string",
                  "description": "The address's postal code. For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses)."
                },
                "country": {
                  "type": "string",
                  "description": "The address's country, in the two-letter format of ISO 3166. For example, `US` or `FR`."
                }
              }
            },
            "fingerprint": {
              "maxLength": 255,
              "type": "string",
              "description": "Intended as a Square-assigned identifier, based\non the card number, to identify the card across multiple locations within a\nsingle application."
            },
            "customer_id": {
              "type": "string",
              "description": "**Required** The ID of a customer created using the Customers API to be associated with the card."
            },
            "merchant_id": {
              "type": "string",
              "description": "The ID of the merchant associated with the card."
            },
            "reference_id": {
              "maxLength": 128,
              "type": "string",
              "description": "An optional user-defined reference ID that associates this card with\nanother entity in an external system. For example, a customer ID from an\nexternal customer management system."
            },
            "enabled": {
              "type": "boolean",
              "description": "Indicates whether or not a card can be used for payments."
            },
            "card_type": {
              "type": "string",
              "description": "The type of the card.\nThe Card object includes this field only in response to Payments API calls."
            },
            "prepaid_type": {
              "type": "string",
              "description": "Indicates whether the Card is prepaid or not.\nThe Card object includes this field only in response to Payments API calls."
            },
            "bin": {
              "maxLength": 6,
              "type": "string",
              "description": "The first six digits of the card number, known as the Bank Identification Number (BIN). Only the Payments API\nreturns this field."
            },
            "version": {
              "type": "integer",
              "format": "int64",
              "description": "Current version number of the card. Increments with each card update. Requests to update an\nexisting Card object will be rejected unless the version in the request matches the current\nversion for the Card."
            }
          },
          "description": "Represents the payment details of a card to be used for payments. These\ndetails are determined by the payment token generated by Web Payments SDK."
        },
        "entry_method": {
          "maxLength": 50,
          "type": "string",
          "description": "The method used to enter the card's details for the payment. The method can be\n`KEYED`, `SWIPED`, `EMV`, `ON_FILE`, or `CONTACTLESS`."
        },
        "cvv_status": {
          "maxLength": 50,
          "type": "string",
          "description": "The status code returned from the Card Verification Value (CVV) check. The code can be\n`CVV_ACCEPTED`, `CVV_REJECTED`, or `CVV_NOT_CHECKED`."
        },
        "avs_status": {
          "maxLength": 50,
          "type": "string",
          "description": "The status code returned from the Address Verification System (AVS) check. The code can be\n`AVS_ACCEPTED`, `AVS_REJECTED`, or `AVS_NOT_CHECKED`."
        },
        "auth_result_code": {
          "maxLength": 10,
          "type": "string",
          "description": "The status code returned by the card issuer that describes the payment's\nauthorization status."
        },
        "application_identifier": {
          "maxLength": 32,
          "type": "string",
          "description": "For EMV payments, the application ID identifies the EMV application used for the payment."
        },
        "application_name": {
          "maxLength": 16,
          "type": "string",
          "description": "For EMV payments, the human-readable name of the EMV application used for the payment."
        },
        "application_cryptogram": {
          "maxLength": 16,
          "type": "string",
          "description": "For EMV payments, the cryptogram generated for the payment."
        },
        "verification_method": {
          "maxLength": 50,
          "type": "string",
          "description": "For EMV payments, the method used to verify the cardholder's identity. The method can be\n`PIN`, `SIGNATURE`, `PIN_AND_SIGNATURE`, `ON_DEVICE`, or `NONE`."
        },
        "verification_results": {
          "maxLength": 50,
          "type": "string",
          "description": "For EMV payments, the results of the cardholder verification. The result can be\n`SUCCESS`, `FAILURE`, or `UNKNOWN`."
        },
        "statement_description": {
          "maxLength": 50,
          "type": "string",
          "description": "The statement description sent to the card networks.\n\nNote: The actual statement description varies and is likely to be truncated and appended with\nadditional information on a per issuer basis."
        },
        "device_details": {
          "description": "__Deprecated__: Use `Payment.device_details` instead.\n\nDetails about the device that took the payment.",
          "type": "object",
          "properties": {
            "device_id": {
              "maxLength": 255,
              "type": "string",
              "description": "The Square-issued ID of the device."
            },
            "device_installation_id": {
              "maxLength": 255,
              "type": "string",
              "description": "The Square-issued installation ID for the device."
            },
            "device_name": {
              "maxLength": 255,
              "type": "string",
              "description": "The name of the device set by the seller."
            }
          }
        },
        "card_payment_timeline": {
          "description": "The timeline for card payments.",
          "type": "object",
          "properties": {
            "authorized_at": {
              "type": "string",
              "description": "The timestamp when the payment was authorized, in RFC 3339 format."
            },
            "captured_at": {
              "type": "string",
              "description": "The timestamp when the payment was captured, in RFC 3339 format."
            },
            "voided_at": {
              "type": "string",
              "description": "The timestamp when the payment was voided, in RFC 3339 format."
            }
          }
        },
        "refund_requires_card_presence": {
          "type": "boolean",
          "description": "Whether the card must be physically present for the payment to\nbe refunded.  If set to `true`, the card must be present."
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["category", "code"],
            "properties": {
              "category": {
                "type": "string",
                "description": "The high-level category for the error."
              },
              "code": {
                "type": "string",
                "description": "The specific code of the error."
              },
              "detail": {
                "type": "string",
                "description": "A human-readable description of the error for debugging purposes."
              },
              "field": {
                "type": "string",
                "description": "The name of the field provided in the original request (if any) that\nthe error pertains to."
              }
            },
            "description": "Represents an error encountered during a request to the Connect API.\n\nSee [Handling errors](https://developer.squareup.com/docs/build-basics/handling-errors) for more information."
          },
          "description": "Information about errors encountered during the request."
        }
      }
    },
    "cash_details": {
      "description": "Details about a cash payment. These details are only populated if the source_type is `CASH`.",
      "type": "object",
      "required": ["buyer_supplied_money"],
      "properties": {
        "buyer_supplied_money": {
          "description": "The amount and currency of the money supplied by the buyer.",
          "type": "object",
          "properties": {
            "amount": {
              "type": "integer",
              "format": "int64",
              "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
            },
            "currency": {
              "type": "string",
              "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
            }
          }
        },
        "change_back_money": {
          "description": "The amount of change due back to the buyer. \nThis read-only field is calculated\nfrom the `amount_money` and `buyer_supplied_money` fields.",
          "type": "object",
          "properties": {
            "amount": {
              "type": "integer",
              "format": "int64",
              "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
            },
            "currency": {
              "type": "string",
              "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
            }
          }
        }
      }
    },
    "bank_account_details": {
      "description": "Details about a bank account payment. These details are only populated if the source_type is `BANK_ACCOUNT`.",
      "type": "object",
      "properties": {
        "bank_name": {
          "maxLength": 100,
          "type": "string",
          "description": "The name of the bank associated with the bank account."
        },
        "transfer_type": {
          "maxLength": 50,
          "type": "string",
          "description": "The type of the bank transfer. The type can be `ACH` or `UNKNOWN`."
        },
        "account_ownership_type": {
          "maxLength": 50,
          "type": "string",
          "description": "The ownership type of the bank account performing the transfer.\nThe type can be `INDIVIDUAL`, `COMPANY`, or `UNKNOWN`."
        },
        "fingerprint": {
          "maxLength": 255,
          "type": "string",
          "description": "Uniquely identifies the bank account for this seller and can be used\nto determine if payments are from the same bank account."
        },
        "country": {
          "minLength": 2,
          "maxLength": 2,
          "type": "string",
          "description": "The two-letter ISO code representing the country the bank account is located in."
        },
        "statement_description": {
          "maxLength": 1000,
          "type": "string",
          "description": "The statement description as sent to the bank."
        },
        "ach_details": {
          "description": "ACH-specific information about the transfer. The information is only populated\nif the `transfer_type` is `ACH`.",
          "type": "object",
          "properties": {
            "routing_number": {
              "maxLength": 50,
              "type": "string",
              "description": "The routing number for the bank account."
            },
            "account_number_suffix": {
              "minLength": 1,
              "maxLength": 4,
              "type": "string",
              "description": "The last few digits of the bank account number."
            },
            "account_type": {
              "maxLength": 50,
              "type": "string",
              "description": "The type of the bank account performing the transfer. The account type can be `CHECKING`,\n`SAVINGS`, or `UNKNOWN`."
            }
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["category", "code"],
            "properties": {
              "category": {
                "type": "string",
                "description": "The high-level category for the error."
              },
              "code": {
                "type": "string",
                "description": "The specific code of the error."
              },
              "detail": {
                "type": "string",
                "description": "A human-readable description of the error for debugging purposes."
              },
              "field": {
                "type": "string",
                "description": "The name of the field provided in the original request (if any) that\nthe error pertains to."
              }
            },
            "description": "Represents an error encountered during a request to the Connect API.\n\nSee [Handling errors](https://developer.squareup.com/docs/build-basics/handling-errors) for more information."
          },
          "description": "Information about errors encountered during the request."
        }
      }
    },
    "external_details": {
      "description": "Details about an external payment. The details are only populated \nif the `source_type` is `EXTERNAL`.",
      "type": "object",
      "required": ["type", "source"],
      "properties": {
        "type": {
          "maxLength": 50,
          "type": "string",
          "description": "The type of external payment the seller received. It can be one of the following:\n- CHECK - Paid using a physical check.\n- BANK_TRANSFER - Paid using external bank transfer.\n- OTHER\\_GIFT\\_CARD - Paid using a non-Square gift card.\n- CRYPTO - Paid using a crypto currency.\n- SQUARE_CASH - Paid using Square Cash App.\n- SOCIAL - Paid using peer-to-peer payment applications.\n- EXTERNAL - A third-party application gathered this payment outside of Square.\n- EMONEY - Paid using an E-money provider.\n- CARD - A credit or debit card that Square does not support.\n- STORED_BALANCE - Use for house accounts, store credit, and so forth.\n- FOOD_VOUCHER - Restaurant voucher provided by employers to employees to pay for meals\n- OTHER - A type not listed here."
        },
        "source": {
          "maxLength": 255,
          "type": "string",
          "description": "A description of the external payment source. For example, \n\"Food Delivery Service\"."
        },
        "source_id": {
          "maxLength": 255,
          "type": "string",
          "description": "An ID to associate the payment to its originating source."
        },
        "source_fee_money": {
          "description": "The fees paid to the source. The `amount_money` minus this field is \nthe net amount seller receives.",
          "type": "object",
          "properties": {
            "amount": {
              "type": "integer",
              "format": "int64",
              "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
            },
            "currency": {
              "type": "string",
              "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](https://developer.squareup.com/reference/square_2022-03-16/enums/Currency) for possible values."
            }
          }
        }
      }
    },
    "wallet_details": {
      "description": "Details about an wallet payment. The details are only populated \nif the `source_type` is `WALLET`.",
      "type": "object",
      "properties": {
        "status": {
          "maxLength": 50,
          "type": "string",
          "description": "The status of the `WALLET` payment. The status can be `AUTHORIZED`, `CAPTURED`, `VOIDED`, or\n`FAILED`."
        }
      }
    },
    "buy_now_pay_later_details": {
      "description": "Details about a Buy Now Pay Later payment. The details are only populated\nif the `source_type` is `BUY_NOW_PAY_LATER`. For more information, see \n[Afterpay Payments](https://developer.squareup.com/docs/payments-api/take-payments/afterpay-payments).",
      "type": "object",
      "properties": {
        "brand": {
          "maxLength": 50,
          "type": "string",
          "description": "The brand used for the Buy Now Pay Later payment.\nThe brand can be `AFTERPAY` or `UNKNOWN`."
        },
        "afterpay_details": {
          "description": "Details about an Afterpay payment. These details are only populated if the `brand` is\n`AFTERPAY`.",
          "type": "object",
          "properties": {
            "email_address": {
              "maxLength": 255,
              "type": "string",
              "description": "Email address on the buyer's Afterpay account."
            }
          }
        }
      }
    },
    "location_id": {
      "maxLength": 50,
      "type": "string",
      "description": "The ID of the location associated with the payment."
    },
    "order_id": {
      "maxLength": 192,
      "type": "string",
      "description": "The ID of the order associated with the payment."
    },
    "reference_id": {
      "maxLength": 40,
      "type": "string",
      "description": "An optional ID that associates the payment with an entity in\nanother system."
    },
    "customer_id": {
      "maxLength": 191,
      "type": "string",
      "description": "The [Customer](https://developer.squareup.com/reference/square_2022-03-16/objects/Customer) ID of the customer associated with the payment."
    },
    "employee_id": {
      "maxLength": 192,
      "type": "string",
      "description": "__Deprecated__: Use `Payment.team_member_id` instead.\n\nAn optional ID of the employee associated with taking the payment."
    },
    "team_member_id": {
      "maxLength": 192,
      "type": "string",
      "description": "An optional ID of the [TeamMember](https://developer.squareup.com/reference/square_2022-03-16/objects/TeamMember) associated with taking the payment."
    },
    "refund_ids": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "A list of `refund_id`s identifying refunds for the payment."
    },
    "risk_evaluation": {
      "description": "Provides information about the risk associated with the payment, as determined by Square.\nThis field is present for payments to sellers that have opted in to receive risk\nevaluations.",
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "description": "The timestamp when payment risk was evaluated, in RFC 3339 format."
        },
        "risk_level": {
          "type": "string",
          "description": "The risk level associated with the payment"
        }
      }
    },
    "buyer_email_address": {
      "maxLength": 255,
      "type": "string",
      "description": "The buyer's email address."
    },
    "billing_address": {
      "description": "The buyer's billing address.",
      "type": "object",
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address.\n\nFields that start with `address_line` provide the address's most specific\ndetails, like street number, street name, and building name. They do *not*\nprovide less specific details like city, state/province, or country (these\ndetails are provided in other fields)."
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address, if any."
        },
        "address_line_3": {
          "type": "string",
          "description": "The third line of the address, if any."
        },
        "locality": {
          "type": "string",
          "description": "The city or town of the address. For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses)."
        },
        "sublocality": {
          "type": "string",
          "description": "A civil region within the address's `locality`, if any."
        },
        "administrative_district_level_1": {
          "type": "string",
          "description": "A civil entity within the address's country. In the US, this\nis the state. For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses)."
        },
        "postal_code": {
          "type": "string",
          "description": "The address's postal code. For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses)."
        },
        "country": {
          "type": "string",
          "description": "The address's country, in the two-letter format of ISO 3166. For example, `US` or `FR`."
        }
      }
    },
    "shipping_address": {
      "description": "The buyer's shipping address.",
      "type": "object",
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address.\n\nFields that start with `address_line` provide the address's most specific\ndetails, like street number, street name, and building name. They do *not*\nprovide less specific details like city, state/province, or country (these\ndetails are provided in other fields)."
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address, if any."
        },
        "address_line_3": {
          "type": "string",
          "description": "The third line of the address, if any."
        },
        "locality": {
          "type": "string",
          "description": "The city or town of the address. For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses)."
        },
        "sublocality": {
          "type": "string",
          "description": "A civil region within the address's `locality`, if any."
        },
        "administrative_district_level_1": {
          "type": "string",
          "description": "A civil entity within the address's country. In the US, this\nis the state. For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses)."
        },
        "postal_code": {
          "type": "string",
          "description": "The address's postal code. For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses)."
        },
        "country": {
          "type": "string",
          "description": "The address's country, in the two-letter format of ISO 3166. For example, `US` or `FR`."
        }
      }
    },
    "note": {
      "maxLength": 500,
      "type": "string",
      "description": "An optional note to include when creating a payment."
    },
    "statement_description_identifier": {
      "type": "string",
      "description": "Additional payment information that gets added to the customer's card statement\nas part of the statement description.\n\nNote that the `statement_description_identifier` might get truncated on the statement description\nto fit the required information including the Square identifier (SQ *) and the name of the\nseller taking the payment."
    },
    "capabilities": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Actions that can be performed on this payment:\n- `EDIT_AMOUNT_UP` - The payment amount can be edited up.\n- `EDIT_AMOUNT_DOWN` - The payment amount can be edited down.\n- `EDIT_TIP_AMOUNT_UP` - The tip amount can be edited up.\n- `EDIT_TIP_AMOUNT_DOWN` - The tip amount can be edited down."
    },
    "receipt_number": {
      "maxLength": 4,
      "type": "string",
      "description": "The payment's receipt number.\nThe field is missing if a payment is canceled."
    },
    "receipt_url": {
      "maxLength": 255,
      "type": "string",
      "description": "The URL for the payment's receipt.\nThe field is only populated for COMPLETED payments."
    },
    "device_details": {
      "description": "Details about the device that took the payment.",
      "type": "object",
      "properties": {
        "device_id": {
          "maxLength": 255,
          "type": "string",
          "description": "The Square-issued ID of the device."
        },
        "device_installation_id": {
          "maxLength": 255,
          "type": "string",
          "description": "The Square-issued installation ID for the device."
        },
        "device_name": {
          "maxLength": 255,
          "type": "string",
          "description": "The name of the device set by the seller."
        }
      }
    },
    "application_details": {
      "description": "Details about the application that took the payment.",
      "type": "object",
      "properties": {
        "square_product": {
          "description": "The Square product, such as Square Point of Sale (POS), \nSquare Invoices, or Square Virtual Terminal.",
          "type": "string"
        },
        "application_id": {
          "type": "string",
          "description": "The Square ID assigned to the application used to take the payment. \nApplication developers can use this information to identify payments that \ntheir application processed. \nFor example, if a developer uses a custom application to process payments, \nthis field contains the application ID from the Developer Dashboard. \nIf a seller uses a [Square App Marketplace](https://developer.squareup.com/docs/app-marketplace) \napplication to process payments, the field contains the corresponding application ID."
        }
      }
    },
    "version_token": {
      "type": "string",
      "description": "Used for optimistic concurrency. This opaque token identifies a specific version of the\n`Payment` object."
    }
  },
  "description": "Represents a payment processed by the Square API.",
  "default": {
    "id": "string",
    "created_at": "string",
    "updated_at": "string",
    "amount_money": {
      "amount": 1,
      "currency": "string"
    },
    "tip_money": {
      "amount": 1,
      "currency": "string"
    },
    "total_money": {
      "amount": 1,
      "currency": "string"
    },
    "app_fee_money": {
      "amount": 1,
      "currency": "string"
    },
    "approved_money": {
      "amount": 1,
      "currency": "string"
    },
    "processing_fee": [
      {
        "effective_at": "string",
        "type": "string",
        "amount_money": {
          "amount": 1,
          "currency": "string"
        }
      }
    ],
    "refunded_money": {
      "amount": 1,
      "currency": "string"
    },
    "status": "string",
    "delay_duration": "string",
    "delay_action": "string",
    "delayed_until": "string",
    "source_type": "string",
    "card_details": {
      "status": "string",
      "card": {
        "id": "string",
        "card_brand": "string",
        "last_4": "stri",
        "exp_month": 1,
        "exp_year": 1,
        "cardholder_name": "string",
        "billing_address": {
          "address_line_1": "string",
          "address_line_2": "string",
          "address_line_3": "string",
          "locality": "string",
          "sublocality": "string",
          "administrative_district_level_1": "string",
          "postal_code": "string",
          "country": "string"
        },
        "fingerprint": "string",
        "customer_id": "string",
        "merchant_id": "string",
        "reference_id": "string",
        "enabled": true,
        "card_type": "string",
        "prepaid_type": "string",
        "bin": "string",
        "version": 1
      },
      "entry_method": "string",
      "cvv_status": "string",
      "avs_status": "string",
      "auth_result_code": "string",
      "application_identifier": "string",
      "application_name": "string",
      "application_cryptogram": "string",
      "verification_method": "string",
      "verification_results": "string",
      "statement_description": "string",
      "device_details": {
        "device_id": "string",
        "device_installation_id": "string",
        "device_name": "string"
      },
      "card_payment_timeline": {
        "authorized_at": "string",
        "captured_at": "string",
        "voided_at": "string"
      },
      "refund_requires_card_presence": true,
      "errors": [
        {
          "category": "string",
          "code": "string",
          "detail": "string",
          "field": "string"
        }
      ]
    },
    "cash_details": {
      "buyer_supplied_money": {
        "amount": 1,
        "currency": "string"
      },
      "change_back_money": {
        "amount": 1,
        "currency": "string"
      }
    },
    "bank_account_details": {
      "bank_name": "string",
      "transfer_type": "string",
      "account_ownership_type": "string",
      "fingerprint": "string",
      "country": "st",
      "statement_description": "string",
      "ach_details": {
        "routing_number": "string",
        "account_number_suffix": "stri",
        "account_type": "string"
      },
      "errors": [
        {
          "category": "string",
          "code": "string",
          "detail": "string",
          "field": "string"
        }
      ]
    },
    "external_details": {
      "type": "string",
      "source": "string",
      "source_id": "string",
      "source_fee_money": {
        "amount": 1,
        "currency": "string"
      }
    },
    "wallet_details": {
      "status": "string"
    },
    "buy_now_pay_later_details": {
      "brand": "string",
      "afterpay_details": {
        "email_address": "string"
      }
    },
    "location_id": "string",
    "order_id": "string",
    "reference_id": "string",
    "customer_id": "string",
    "employee_id": "string",
    "team_member_id": "string",
    "refund_ids": ["string"],
    "risk_evaluation": {
      "created_at": "string",
      "risk_level": "string"
    },
    "buyer_email_address": "string",
    "billing_address": {
      "address_line_1": "string",
      "address_line_2": "string",
      "address_line_3": "string",
      "locality": "string",
      "sublocality": "string",
      "administrative_district_level_1": "string",
      "postal_code": "string",
      "country": "string"
    },
    "shipping_address": {
      "address_line_1": "string",
      "address_line_2": "string",
      "address_line_3": "string",
      "locality": "string",
      "sublocality": "string",
      "administrative_district_level_1": "string",
      "postal_code": "string",
      "country": "string"
    },
    "note": "string",
    "statement_description_identifier": "string",
    "capabilities": ["string"],
    "receipt_number": "stri",
    "receipt_url": "string",
    "device_details": {
      "device_id": "string",
      "device_installation_id": "string",
      "device_name": "string"
    },
    "application_details": {
      "square_product": "string",
      "application_id": "string"
    },
    "version_token": "string"
  },
  "$schema": "https://json-schema.org/draft/2020-12/schema"
}
