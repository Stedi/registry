{
  "type": "object",
  "properties": {
    "descriptionHtml": {
      "type": "string",
      "title": "String",
      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
    },
    "handle": {
      "type": "string",
      "title": "String",
      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
    },
    "redirectNewHandle": {
      "type": "boolean",
      "title": "Boolean",
      "description": "Represents `true` or `false` values.",
      "default": false
    },
    "seo": {
      "description": "The SEO information associated with the product.",
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "title": "String",
          "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
        },
        "description": {
          "type": "string",
          "title": "String",
          "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
        }
      },
      "required": []
    },
    "productType": {
      "type": "string",
      "title": "String",
      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
    },
    "standardizedProductType": {
      "description": "The standardized product type in the Shopify product taxonomy.",
      "type": "object",
      "properties": {
        "productTaxonomyNodeId": {
          "type": "object",
          "title": "ID",
          "description": "Represents a unique identifier, often used to refetch an object.\nThe ID type appears in a JSON response as a String, but it is not intended to be human-readable.\n\nExample value: `\"gid://shopify/Product/10079785100\"`\n"
        }
      },
      "required": [
        "productTaxonomyNodeId"
      ]
    },
    "customProductType": {
      "type": "string",
      "title": "String",
      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
    },
    "tags": {
      "type": "array",
      "items": {
        "type": "string",
        "title": "String",
        "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
      },
      "description": "A comma separated list tags that have been added to the product."
    },
    "templateSuffix": {
      "type": "string",
      "title": "String",
      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
    },
    "giftCard": {
      "type": "boolean",
      "title": "Boolean",
      "description": "Represents `true` or `false` values."
    },
    "giftCardTemplateSuffix": {
      "type": "string",
      "title": "String",
      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
    },
    "title": {
      "type": "string",
      "title": "String",
      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
    },
    "vendor": {
      "type": "string",
      "title": "String",
      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
    },
    "bodyHtml": {
      "type": "string",
      "title": "String",
      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
    },
    "collectionsToJoin": {
      "type": "array",
      "items": {
        "type": "object",
        "title": "ID",
        "description": "Represents a unique identifier, often used to refetch an object.\nThe ID type appears in a JSON response as a String, but it is not intended to be human-readable.\n\nExample value: `\"gid://shopify/Product/10079785100\"`\n"
      },
      "description": "The IDs of the collections that this product will be added to."
    },
    "collectionsToLeave": {
      "type": "array",
      "items": {
        "type": "object",
        "title": "ID",
        "description": "Represents a unique identifier, often used to refetch an object.\nThe ID type appears in a JSON response as a String, but it is not intended to be human-readable.\n\nExample value: `\"gid://shopify/Product/10079785100\"`\n"
      },
      "description": "The IDs of collections that will no longer include the product."
    },
    "id": {
      "type": "object",
      "title": "ID",
      "description": "Represents a unique identifier, often used to refetch an object.\nThe ID type appears in a JSON response as a String, but it is not intended to be human-readable.\n\nExample value: `\"gid://shopify/Product/10079785100\"`\n"
    },
    "images": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "object",
            "title": "ID",
            "description": "Represents a unique identifier, often used to refetch an object.\nThe ID type appears in a JSON response as a String, but it is not intended to be human-readable.\n\nExample value: `\"gid://shopify/Product/10079785100\"`\n"
          },
          "altText": {
            "type": "string",
            "title": "String",
            "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
          },
          "src": {
            "type": "string",
            "title": "String",
            "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
          }
        },
        "required": [],
        "description": "Specifies the input fields for an image."
      },
      "description": "The images to associate with the product."
    },
    "metafields": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "title": "String",
            "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
          },
          "id": {
            "type": "object",
            "title": "ID",
            "description": "Represents a unique identifier, often used to refetch an object.\nThe ID type appears in a JSON response as a String, but it is not intended to be human-readable.\n\nExample value: `\"gid://shopify/Product/10079785100\"`\n"
          },
          "namespace": {
            "type": "string",
            "title": "String",
            "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
          },
          "key": {
            "type": "string",
            "title": "String",
            "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
          },
          "value": {
            "type": "string",
            "title": "String",
            "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
          },
          "type": {
            "type": "string",
            "title": "String",
            "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
          }
        },
        "required": [],
        "description": "The input fields to use to create or update a metafield through a mutation on the owning resource.\nAn alternative way to create or update a metafield is by using the\n[metafieldsSet](https://shopify.dev/api/admin-graphql/latest/mutations/metafieldsSet) mutation.\n"
      },
      "description": "The metafields to associate with this product."
    },
    "privateMetafields": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "object",
            "title": "ID",
            "description": "Represents a unique identifier, often used to refetch an object.\nThe ID type appears in a JSON response as a String, but it is not intended to be human-readable.\n\nExample value: `\"gid://shopify/Product/10079785100\"`\n"
          },
          "namespace": {
            "type": "string",
            "title": "String",
            "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
          },
          "key": {
            "type": "string",
            "title": "String",
            "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
          },
          "valueInput": {
            "description": "The `value` and `valueType` of the private metafield, wrapped in a `ValueInput` object.",
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "title": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
              },
              "valueType": {
                "type": "string",
                "anyOf": [
                  {
                    "enum": [
                      "STRING"
                    ],
                    "title": "A string metafield.",
                    "description": "A string metafield."
                  },
                  {
                    "enum": [
                      "INTEGER"
                    ],
                    "title": "An integer metafield.",
                    "description": "An integer metafield."
                  },
                  {
                    "enum": [
                      "JSON_STRING"
                    ],
                    "title": "A JSON string metafield.",
                    "description": "A JSON string metafield."
                  }
                ],
                "description": "Supported private metafield value types."
              }
            },
            "required": [
              "value",
              "valueType"
            ]
          }
        },
        "required": [
          "namespace",
          "key",
          "valueInput"
        ],
        "description": "The input fields for a private metafield.\n"
      },
      "description": "The private metafields to associate with this product."
    },
    "options": {
      "type": "array",
      "items": {
        "type": "string",
        "title": "String",
        "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
      },
      "description": "List of custom product options (maximum of 3 per product)."
    },
    "productPublications": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "publicationId": {
            "type": "object",
            "title": "ID",
            "description": "Represents a unique identifier, often used to refetch an object.\nThe ID type appears in a JSON response as a String, but it is not intended to be human-readable.\n\nExample value: `\"gid://shopify/Product/10079785100\"`\n"
          },
          "channelId": {
            "type": "object",
            "title": "ID",
            "description": "Represents a unique identifier, often used to refetch an object.\nThe ID type appears in a JSON response as a String, but it is not intended to be human-readable.\n\nExample value: `\"gid://shopify/Product/10079785100\"`\n"
          },
          "channelHandle": {
            "type": "string",
            "title": "String",
            "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
          },
          "publishDate": {
            "type": "object",
            "title": "DateTime",
            "description": "Represents an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)-encoded date and time string.\nFor example, 3:30 pm on September 7, 2019 in the time zone of UTC (Coordinated Universal Time) is\nrepresented as `\"2019-09-07T15:50:00Z`\".\n"
          }
        },
        "required": [],
        "description": "Specifies a publication to which a product will be published."
      },
      "description": "A list of the channels where the product is published. This argument is deprecated: Use `PublishablePublish` instead."
    },
    "publications": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "publicationId": {
            "type": "object",
            "title": "ID",
            "description": "Represents a unique identifier, often used to refetch an object.\nThe ID type appears in a JSON response as a String, but it is not intended to be human-readable.\n\nExample value: `\"gid://shopify/Product/10079785100\"`\n"
          },
          "channelId": {
            "type": "object",
            "title": "ID",
            "description": "Represents a unique identifier, often used to refetch an object.\nThe ID type appears in a JSON response as a String, but it is not intended to be human-readable.\n\nExample value: `\"gid://shopify/Product/10079785100\"`\n"
          },
          "channelHandle": {
            "type": "string",
            "title": "String",
            "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
          },
          "publishDate": {
            "type": "object",
            "title": "DateTime",
            "description": "Represents an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)-encoded date and time string.\nFor example, 3:30 pm on September 7, 2019 in the time zone of UTC (Coordinated Universal Time) is\nrepresented as `\"2019-09-07T15:50:00Z`\".\n"
          }
        },
        "required": [],
        "description": "Specifies a publication to which a product will be published."
      },
      "description": "A list of the channels where the product is published. This argument is deprecated: Use `PublishablePublish` instead."
    },
    "publishDate": {
      "type": "object",
      "title": "DateTime",
      "description": "Represents an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)-encoded date and time string.\nFor example, 3:30 pm on September 7, 2019 in the time zone of UTC (Coordinated Universal Time) is\nrepresented as `\"2019-09-07T15:50:00Z`\".\n"
    },
    "publishOn": {
      "type": "object",
      "title": "DateTime",
      "description": "Represents an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)-encoded date and time string.\nFor example, 3:30 pm on September 7, 2019 in the time zone of UTC (Coordinated Universal Time) is\nrepresented as `\"2019-09-07T15:50:00Z`\".\n"
    },
    "published": {
      "type": "boolean",
      "title": "Boolean",
      "description": "Represents `true` or `false` values."
    },
    "publishedAt": {
      "type": "object",
      "title": "DateTime",
      "description": "Represents an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)-encoded date and time string.\nFor example, 3:30 pm on September 7, 2019 in the time zone of UTC (Coordinated Universal Time) is\nrepresented as `\"2019-09-07T15:50:00Z`\".\n"
    },
    "variants": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "barcode": {
            "type": "string",
            "title": "String",
            "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
          },
          "compareAtPrice": {
            "type": "object",
            "title": "Money",
            "description": "A monetary value string without a currency symbol or code. Example value: `\"100.57\"`."
          },
          "fulfillmentServiceId": {
            "type": "object",
            "title": "ID",
            "description": "Represents a unique identifier, often used to refetch an object.\nThe ID type appears in a JSON response as a String, but it is not intended to be human-readable.\n\nExample value: `\"gid://shopify/Product/10079785100\"`\n"
          },
          "harmonizedSystemCode": {
            "type": "string",
            "title": "String",
            "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
          },
          "id": {
            "type": "object",
            "title": "ID",
            "description": "Represents a unique identifier, often used to refetch an object.\nThe ID type appears in a JSON response as a String, but it is not intended to be human-readable.\n\nExample value: `\"gid://shopify/Product/10079785100\"`\n"
          },
          "imageId": {
            "type": "object",
            "title": "ID",
            "description": "Represents a unique identifier, often used to refetch an object.\nThe ID type appears in a JSON response as a String, but it is not intended to be human-readable.\n\nExample value: `\"gid://shopify/Product/10079785100\"`\n"
          },
          "imageSrc": {
            "type": "string",
            "title": "String",
            "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
          },
          "mediaSrc": {
            "type": "array",
            "items": {
              "type": "string",
              "title": "String",
              "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
            },
            "description": "The URL of the media to associate with the variant. This field can only be used in mutations that create media images and must match one of the URLs being created on the product. This field only accepts one value."
          },
          "inventoryManagement": {
            "type": "string",
            "anyOf": [
              {
                "enum": [
                  "SHOPIFY"
                ],
                "title": "This product variant's inventory is tracked by Shopify. In the unstable API version, this product variant's inventory could also be tracked by both Shopify and a third-party fulfillment service.",
                "description": "This product variant's inventory is tracked by Shopify. In the unstable API version, this product variant's inventory could also be tracked by both Shopify and a third-party fulfillment service."
              },
              {
                "enum": [
                  "NOT_MANAGED"
                ],
                "title": "This product variant's inventory is not tracked.",
                "description": "This product variant's inventory is not tracked."
              },
              {
                "enum": [
                  "FULFILLMENT_SERVICE"
                ],
                "title": "This product variant's inventory is tracked by a third-party fulfillment service.",
                "description": "This product variant's inventory is tracked by a third-party fulfillment service."
              }
            ],
            "description": "The valid values for the method of inventory tracking for a product variant."
          },
          "inventoryPolicy": {
            "type": "string",
            "anyOf": [
              {
                "enum": [
                  "DENY"
                ],
                "title": "Customers can't buy this product variant after it's out of stock.",
                "description": "Customers can't buy this product variant after it's out of stock."
              },
              {
                "enum": [
                  "CONTINUE"
                ],
                "title": "Customers can buy this product variant after it's out of stock.",
                "description": "Customers can buy this product variant after it's out of stock."
              }
            ],
            "description": "The valid values for the inventory policy of a product variant once it is out of stock.\n"
          },
          "inventoryQuantities": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "availableQuantity": {
                  "type": "number",
                  "title": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."
                },
                "locationId": {
                  "type": "object",
                  "title": "ID",
                  "description": "Represents a unique identifier, often used to refetch an object.\nThe ID type appears in a JSON response as a String, but it is not intended to be human-readable.\n\nExample value: `\"gid://shopify/Product/10079785100\"`\n"
                }
              },
              "required": [
                "availableQuantity",
                "locationId"
              ],
              "description": "Specifies the input fields for an inventory level."
            },
            "description": "Create only field. The inventory quantities at each location where the variant is stocked."
          },
          "inventoryItem": {
            "description": "Inventory Item associated with the variant, used for unit cost.",
            "type": "object",
            "properties": {
              "cost": {
                "type": "object",
                "title": "Decimal",
                "description": "A signed decimal number, which supports arbitrary precision and is serialized as a string.\n\nExample values: `\"29.99\"`, `\"29.999\"`.\n"
              },
              "tracked": {
                "type": "boolean",
                "title": "Boolean",
                "description": "Represents `true` or `false` values."
              }
            },
            "required": []
          },
          "metafields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "title": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
                },
                "id": {
                  "type": "object",
                  "title": "ID",
                  "description": "Represents a unique identifier, often used to refetch an object.\nThe ID type appears in a JSON response as a String, but it is not intended to be human-readable.\n\nExample value: `\"gid://shopify/Product/10079785100\"`\n"
                },
                "namespace": {
                  "type": "string",
                  "title": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
                },
                "key": {
                  "type": "string",
                  "title": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
                },
                "value": {
                  "type": "string",
                  "title": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
                },
                "type": {
                  "type": "string",
                  "title": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
                }
              },
              "required": [],
              "description": "The input fields to use to create or update a metafield through a mutation on the owning resource.\nAn alternative way to create or update a metafield is by using the\n[metafieldsSet](https://shopify.dev/api/admin-graphql/latest/mutations/metafieldsSet) mutation.\n"
            },
            "description": "Additional customizable information about the product variant."
          },
          "privateMetafields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "owner": {
                  "type": "object",
                  "title": "ID",
                  "description": "Represents a unique identifier, often used to refetch an object.\nThe ID type appears in a JSON response as a String, but it is not intended to be human-readable.\n\nExample value: `\"gid://shopify/Product/10079785100\"`\n"
                },
                "namespace": {
                  "type": "string",
                  "title": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
                },
                "key": {
                  "type": "string",
                  "title": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
                },
                "valueInput": {
                  "description": "The `value` and `valueType` of the private metafield, wrapped in a `ValueInput` object.",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "String",
                      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
                    },
                    "valueType": {
                      "type": "string",
                      "anyOf": [
                        {
                          "enum": [
                            "STRING"
                          ],
                          "title": "A string metafield.",
                          "description": "A string metafield."
                        },
                        {
                          "enum": [
                            "INTEGER"
                          ],
                          "title": "An integer metafield.",
                          "description": "An integer metafield."
                        },
                        {
                          "enum": [
                            "JSON_STRING"
                          ],
                          "title": "A JSON string metafield.",
                          "description": "A JSON string metafield."
                        }
                      ],
                      "description": "Supported private metafield value types."
                    }
                  },
                  "required": [
                    "value",
                    "valueType"
                  ]
                }
              },
              "required": [
                "namespace",
                "key",
                "valueInput"
              ],
              "description": "The input fields for a private metafield.\n"
            },
            "description": "The private metafields to associated with this product."
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string",
              "title": "String",
              "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
            },
            "description": "The custom properties that a shop owner uses to define product variants."
          },
          "position": {
            "type": "number",
            "title": "Int",
            "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."
          },
          "price": {
            "type": "object",
            "title": "Money",
            "description": "A monetary value string without a currency symbol or code. Example value: `\"100.57\"`."
          },
          "productId": {
            "type": "object",
            "title": "ID",
            "description": "Represents a unique identifier, often used to refetch an object.\nThe ID type appears in a JSON response as a String, but it is not intended to be human-readable.\n\nExample value: `\"gid://shopify/Product/10079785100\"`\n"
          },
          "requiresShipping": {
            "type": "boolean",
            "title": "Boolean",
            "description": "Represents `true` or `false` values."
          },
          "sku": {
            "type": "string",
            "title": "String",
            "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
          },
          "taxable": {
            "type": "boolean",
            "title": "Boolean",
            "description": "Represents `true` or `false` values."
          },
          "title": {
            "type": "string",
            "title": "String",
            "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
          },
          "taxCode": {
            "type": "string",
            "title": "String",
            "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text."
          },
          "weight": {
            "type": "number",
            "title": "Float",
            "description": "Represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point)."
          },
          "weightUnit": {
            "type": "string",
            "anyOf": [
              {
                "enum": [
                  "KILOGRAMS"
                ],
                "title": "1 kilogram equals 1000 grams.",
                "description": "1 kilogram equals 1000 grams."
              },
              {
                "enum": [
                  "GRAMS"
                ],
                "title": "Metric system unit of mass.",
                "description": "Metric system unit of mass."
              },
              {
                "enum": [
                  "POUNDS"
                ],
                "title": "1 pound equals 16 ounces.",
                "description": "1 pound equals 16 ounces."
              },
              {
                "enum": [
                  "OUNCES"
                ],
                "title": "Imperial system unit of mass.",
                "description": "Imperial system unit of mass."
              }
            ],
            "description": "Units of measurement for weight."
          }
        },
        "required": [],
        "description": "Specifies a product variant to create or update."
      },
      "description": "A list of variants associated with the product."
    },
    "status": {
      "type": "string",
      "anyOf": [
        {
          "enum": [
            "ACTIVE"
          ],
          "title": "The product is ready to sell and is available to customers on the online store, sales channels, and apps. By default, existing products are set to active.",
          "description": "The product is ready to sell and is available to customers on the online store, sales channels, and apps. By default, existing products are set to active."
        },
        {
          "enum": [
            "ARCHIVED"
          ],
          "title": "The product is no longer being sold and isn't available to customers on sales channels and apps.",
          "description": "The product is no longer being sold and isn't available to customers on sales channels and apps."
        },
        {
          "enum": [
            "DRAFT"
          ],
          "title": "The product isn't ready to sell and is unavailable to customers on sales channels and apps. By default, duplicated and unarchived products are set to draft.",
          "description": "The product isn't ready to sell and is unavailable to customers on sales channels and apps. By default, duplicated and unarchived products are set to draft."
        }
      ],
      "description": "The possible product statuses."
    },
    "requiresSellingPlan": {
      "type": "boolean",
      "title": "Boolean",
      "description": "Represents `true` or `false` values."
    }
  },
  "required": [],
  "description": "Specifies the input fields required to create a product.",
  "default": {
    "descriptionHtml": "string",
    "handle": "string",
    "redirectNewHandle": false,
    "seo": {
      "title": "string",
      "description": "string"
    },
    "productType": "string",
    "standardizedProductType": {
      "productTaxonomyNodeId": {}
    },
    "customProductType": "string",
    "tags": [
      "string"
    ],
    "templateSuffix": "string",
    "giftCard": true,
    "giftCardTemplateSuffix": "string",
    "title": "string",
    "vendor": "string",
    "bodyHtml": "string",
    "collectionsToJoin": [
      {}
    ],
    "collectionsToLeave": [
      {}
    ],
    "id": {},
    "images": [
      {
        "id": {},
        "altText": "string",
        "src": "string"
      }
    ],
    "metafields": [
      {
        "description": "string",
        "id": {},
        "namespace": "string",
        "key": "string",
        "value": "string",
        "type": "string"
      }
    ],
    "privateMetafields": [
      {
        "owner": {},
        "namespace": "string",
        "key": "string",
        "valueInput": {
          "value": "string",
          "valueType": "STRING"
        }
      }
    ],
    "options": [
      "string"
    ],
    "productPublications": [
      {
        "publicationId": {},
        "channelId": {},
        "channelHandle": "string",
        "publishDate": {}
      }
    ],
    "publications": [
      {
        "publicationId": {},
        "channelId": {},
        "channelHandle": "string",
        "publishDate": {}
      }
    ],
    "publishDate": {},
    "publishOn": {},
    "published": true,
    "publishedAt": {},
    "variants": [
      {
        "barcode": "string",
        "compareAtPrice": {},
        "fulfillmentServiceId": {},
        "harmonizedSystemCode": "string",
        "id": {},
        "imageId": {},
        "imageSrc": "string",
        "mediaSrc": [
          "string"
        ],
        "inventoryManagement": "SHOPIFY",
        "inventoryPolicy": "DENY",
        "inventoryQuantities": [
          {
            "availableQuantity": 0,
            "locationId": {}
          }
        ],
        "inventoryItem": {
          "cost": {},
          "tracked": true
        },
        "metafields": [
          {
            "description": "string",
            "id": {},
            "namespace": "string",
            "key": "string",
            "value": "string",
            "type": "string"
          }
        ],
        "privateMetafields": [
          {
            "owner": {},
            "namespace": "string",
            "key": "string",
            "valueInput": {
              "value": "string",
              "valueType": "STRING"
            }
          }
        ],
        "options": [
          "string"
        ],
        "position": 0,
        "price": {},
        "productId": {},
        "requiresShipping": true,
        "sku": "string",
        "taxable": true,
        "title": "string",
        "taxCode": "string",
        "weight": 0,
        "weightUnit": "KILOGRAMS"
      }
    ],
    "status": "ACTIVE",
    "requiresSellingPlan": true
  },
  "$schema": "https://json-schema.org/draft/2020-12/schema"
}