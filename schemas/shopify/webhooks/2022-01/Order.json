{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Order",
  "description": "An order is a customer's request to purchase one or more products from a shop.",
  "type": "object",
  "properties": {
    "app_id": {
      "type": "number",
      "description": "The ID of the app that created the order."
    },
    "billing_address": {
      "type": "object",
      "description": "The mailing address associated with the payment method. This address is an optional field that won't be available on orders that do not require a payment method. ",
      "properties": {
        "zip": {
          "type": "string",
          "description": "The customer's postal code, also known as zip, postcode, Eircode, etc."
        },
        "city": {
          "type": "string",
          "description": "The customer's city, town, or village."
        },
        "phone": {
          "type": "string",
          "description": "The customer's phone number at this address."
        },
        "company": {
          "type": "string",
          "description": "The customer's company."
        },
        "country": {
          "type": "string",
          "description": "The customer's country."
        },
        "default": {
          "type": "boolean",
          "description": "Whether this address is the default address for the customer."
        },
        "address1": {
          "type": "string",
          "description": "The customer's mailing address."
        },
        "address2": {
          "type": "string",
          "description": "An additional field for the customer's mailing address."
        },
        "province": {
          "type": "string",
          "description": "The customer's region name. Typically a province, a state, or a prefecture."
        },
        "last_name": {
          "type": "string",
          "description": "The customer's last name."
        },
        "first_name": {
          "type": "string",
          "description": "The customer's first name."
        },
        "customer_id": {
          "type": "number",
          "description": "A unique identifier for the customer."
        },
        "country_code": {
          "type": "string",
          "description": "The two-letter country code corresponding to the customer's country."
        },
        "country_name": {
          "type": "string",
          "description": "The customer's normalized country name."
        },
        "province_code": {
          "type": "string",
          "description": "The code for the region of the address, such as the province, state, or district. For example QC for Quebec, Canada."
        }
      }
    },
    "browser_ip": {
      "type": "string",
      "description": "The IP address of the browser used by the customer when they placed the order. Both IPv4 and IPv6 are supported."
    },
    "buyer_accepts_marketing": {
      "type": "boolean",
      "description": "Whether the customer consented to receive email updates from the shop."
    },
    "cancel_reason": {
      "type": "string",
      "description": "The reason why the order was canceled"
    },
    "cancelled_at": {
      "type": [
        "string",
        "null"
      ],
      "description": "The date and time when the order was canceled. Returns null if the order isn't canceled."
    },
    "cart_token": {
      "type": "string",
      "description": "A unique value when referencing the cart that's associated with the order."
    },
    "checkout_token": {
      "type": "string",
      "description": "A unique value when referencing the checkout that's associated with the order."
    },
    "client_details": {
      "type": "object",
      "description": "Information about the browser that the customer used when they placed their order",
      "properties": {
        "browser_ip": {
          "type": "string"
        },
        "user_agent": {
          "type": "string"
        },
        "session_hash": {
          "type": "string"
        },
        "browser_width": {
          "type": "number"
        },
        "browser_height": {
          "type": "number"
        },
        "accept_language": {
          "type": "string"
        }
      }
    },
    "closed_at": {
      "type": "string",
      "description": "The date and time (ISO 8601 format) when the order was closed. Returns null if the order isn't closed."
    },
    "created_at": {
      "type": "string",
      "description": "The autogenerated date and time (ISO 8601 format) when the order was created in Shopify. The value for this property cannot be changed."
    },
    "currency": {
      "type": "string",
      "description": "The three-letter code (ISO 4217 format) for the shop currency."
    },
    "current_total_discounts": {
      "type": "string",
      "description": "The current total discounts on the order in the shop currency. The value of this field reflects order edits, returns, and refunds."
    },
    "current_total_discounts_set": {
      "type": "object",
      "description": "The current total discounts on the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds.",
      "properties": {
        "current_total_discounts_set": {
          "type": "object",
          "properties": {
            "shop_money": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "string"
                },
                "currency_code": {
                  "type": "string"
                }
              }
            },
            "presentment_money": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "string"
                },
                "currency_code": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "current_total_duties_set": {
      "type": "object",
      "description": "The current total duties charged on the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds.",
      "properties": {
        "current_total_duties_set": {
          "type": "object",
          "properties": {
            "shop_money": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "string"
                },
                "currency_code": {
                  "type": "string"
                }
              }
            },
            "presentment_money": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "string"
                },
                "currency_code": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "current_total_price": {
      "type": "string",
      "description": "The current total price of the order in the shop currency. The value of this field reflects order edits, returns, and refunds."
    },
    "current_total_price_set": {
      "type": "object",
      "description": "The current total price of the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds.",
      "properties": {
        "current_total_price_set": {
          "type": "object",
          "properties": {
            "shop_money": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "string"
                },
                "currency_code": {
                  "type": "string"
                }
              }
            },
            "presentment_money": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "string"
                },
                "currency_code": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "current_subtotal_price": {
      "type": "string",
      "description": "The current subtotal price of the order in the shop currency. The value of this field reflects order edits, returns, and refunds."
    },
    "current_subtotal_price_set": {
      "type": "object",
      "description": "The current subtotal price of the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds.",
      "properties": {
        "current_subtotal_price_set": {
          "type": "object",
          "properties": {
            "shop_money": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "string"
                },
                "currency_code": {
                  "type": "string"
                }
              }
            },
            "presentment_money": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "string"
                },
                "currency_code": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "current_total_tax": {
      "type": "string",
      "description": "The current total taxes charged on the order in the shop currency. The value of this field reflects order edits, returns, or refunds."
    },
    "current_total_tax_set": {
      "type": "object",
      "description": "The current total taxes charged on the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds.",
      "properties": {
        "current_total_tax_set": {
          "type": "object",
          "properties": {
            "shop_money": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "string"
                },
                "currency_code": {
                  "type": "string"
                }
              }
            },
            "presentment_money": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "string"
                },
                "currency_code": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "customer": {
      "type": "object",
      "description": "Information about the customer. The order might not have a customer and apps should not depend on the existence of a customer object. This value might be null if the order was created through Shopify POS. For more information about the customer object, see the Customer resource.",
      "properties": {
        "id": {
          "type": "number"
        },
        "note": {},
        "tags": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "addresses": {
          "type": "object",
          "properties": {}
        },
        "last_name": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "tax_exempt": {
          "type": "boolean"
        },
        "updated_at": {
          "type": "string"
        },
        "total_spent": {
          "type": "string"
        },
        "orders_count": {
          "type": "string"
        },
        "last_order_id": {
          "type": "number"
        },
        "tax_exemptions": {
          "type": "object",
          "properties": {}
        },
        "verified_email": {
          "type": "boolean"
        },
        "default_address": {
          "type": "object",
          "properties": {}
        },
        "last_order_name": {
          "type": "string"
        },
        "accepts_marketing": {
          "type": "boolean"
        },
        "admin_graphql_api_id": {
          "type": "string"
        },
        "multipass_identifier": {}
      }
    },
    "customer_locale": {
      "type": "string",
      "description": "The two or three-letter language code, optionally followed by a region modifier."
    },
    "discount_applications": {
      "type": "object",
      "description": "An ordered list of stacked discount applications. The discount_applications property includes 3 types: discount_code, manual, and script. All 3 types share a common structure and have some type specific attributes.",
      "properties": {
        "discount_applications": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "value_type": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "target_type": {
                "type": "string"
              },
              "target_selection": {
                "type": "string"
              },
              "allocation_method": {
                "type": "string"
              },
              "code": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "discount_codes": {
      "type": "array",
      "description": "A list of discounts applied to the order.",
      "items": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          }
        }
      }
    },
    "email": {
      "type": "string",
      "description": "The customer's email address."
    },
    "estimated_taxes": {
      "type": "boolean",
      "description": "Whether taxes on the order are estimated. Many factors can change between the time a customer places an order and the time the order is shipped, which could affect the calculation of taxes. This property returns false when taxes on the order are finalized and aren't subject to any changes."
    },
    "financial_status": {
      "description": "The status of payments associated with the order. Can only be set when the order is created.",
      "type": "string",
      "enum": [
        "pending",
        "authorized",
        "partially_paid",
        "paid",
        "partially_refunded",
        "refunded",
        "voided"
      ]
    },
    "fulfillments": {
      "type": "array",
      "description": "An array of fulfillments associated with the order. For more information, see the Fulfillment API.",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "status": {
            "type": "string"
          },
          "order_id": {
            "type": "number"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "tracking_number": {
            "type": "string"
          },
          "tracking_company": {
            "type": "string"
          }
        }
      }
    },
    "fulfillment_status": {
      "type": "string",
      "description": "The order's status in terms of fulfilled line items."
    },
    "gateway": {
      "type": "string",
      "description": "The payment gateway used."
    },
    "id": {
      "type": "number",
      "description": "The ID of the order, used for API purposes. This is different from the order_number property, which is the ID used by the shop owner and customer."
    },
    "landing_site": {
      "type": "string",
      "description": "The URL for the page where the buyer landed when they entered the shop."
    },
    "line_items": {
      "type": "array",
      "description": "A list of line item objects, each containing information about an item in the order. ",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "sku": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "grams": {
            "type": "number"
          },
          "price": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "duties": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "tax_lines": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "rate": {
                        "type": "number"
                      },
                      "price": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "price_set": {
                        "type": "object",
                        "properties": {
                          "shop_money": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "string"
                              },
                              "currency_code": {
                                "type": "string"
                              }
                            }
                          },
                          "presentment_money": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "string"
                              },
                              "currency_code": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "channel_liable": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "shop_money": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "string"
                    },
                    "currency_code": {
                      "type": "string"
                    }
                  }
                },
                "presentment_money": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "string"
                    },
                    "currency_code": {
                      "type": "string"
                    }
                  }
                },
                "admin_graphql_api_id": {
                  "type": "string"
                },
                "country_code_of_origin": {
                  "type": "string"
                },
                "harmonized_system_code": {
                  "type": "string"
                }
              }
            }
          },
          "vendor": {
            "type": "string"
          },
          "taxable": {
            "type": "boolean"
          },
          "quantity": {
            "type": "number"
          },
          "gift_card": {
            "type": "boolean"
          },
          "price_set": {
            "type": "object",
            "properties": {
              "shop_money": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency_code": {
                    "type": "string"
                  }
                }
              },
              "presentment_money": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency_code": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "tax_lines": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "rate": {
                  "type": "number"
                },
                "price": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "price_set": {
                  "type": "object",
                  "properties": {
                    "shop_money": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "string"
                        },
                        "currency_code": {
                          "type": "string"
                        }
                      }
                    },
                    "presentment_money": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "string"
                        },
                        "currency_code": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "channel_liable": {
                  "type": "boolean"
                }
              }
            }
          },
          "product_id": {
            "type": "number"
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "variant_id": {
            "type": "number"
          },
          "variant_title": {
            "type": "string"
          },
          "total_discount": {
            "type": "string"
          },
          "origin_location": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number"
              },
              "zip": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "address1": {
                "type": "string"
              },
              "address2": {
                "type": "string"
              },
              "country_code": {
                "type": "string"
              },
              "province_code": {
                "type": "string"
              }
            }
          },
          "requires_shipping": {
            "type": "boolean"
          },
          "fulfillment_status": {
            "type": "string"
          },
          "total_discount_set": {
            "type": "object",
            "properties": {
              "shop_money": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency_code": {
                    "type": "string"
                  }
                }
              },
              "presentment_money": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency_code": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "fulfillment_service": {
            "type": "string"
          },
          "discount_allocations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "string"
                },
                "amount_set": {
                  "type": "object",
                  "properties": {
                    "shop_money": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "string"
                        },
                        "currency_code": {
                          "type": "string"
                        }
                      }
                    },
                    "presentment_money": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "string"
                        },
                        "currency_code": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "discount_application_index": {
                  "type": "number"
                }
              }
            }
          },
          "fulfillable_quantity": {
            "type": "number"
          }
        }
      }
    },
    "location_id": {
      "type": "number",
      "description": "The ID of the physical location where the order was processed. If you need to reference the location against an order, then use the FulfillmentOrder resource."
    },
    "name": {
      "type": "string",
      "description": "The order name, generated by combining the order_number property with the order prefix and suffix that are set in the merchant's general settings. This is different from the id property, which is the ID of the order used by the API. This field can also be set by the API to be any string value."
    },
    "note": {
      "type": "string",
      "description": "An optional note that a shop owner can attach to the order."
    },
    "note_attributes": {
      "type": "array",
      "description": "Extra information that is added to the order. Appears in the Additional details section of an order details page. Each array entry must contain a hash with name and value keys.",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      }
    },
    "number": {
      "type": "number",
      "description": "The order's position in the shop's count of orders. Numbers are sequential and start at 1."
    },
    "order_number": {
      "type": "number",
      "description": "The order 's position in the shop's count of orders starting at 1001. Order numbers are sequential and start at 1001."
    },
    "original_total_duties_set": {
      "type": "object",
      "description": "The original total duties charged on the order in shop and presentment currencies.",
      "properties": {
        "original_total_duties_set": {
          "type": "object",
          "properties": {
            "shop_money": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "string"
                },
                "currency_code": {
                  "type": "string"
                }
              }
            },
            "presentment_money": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "string"
                },
                "currency_code": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "payment_details": {
      "type": "object",
      "description": "An object containing information about the payment",
      "properties": {
        "avs_result_code": {
          "type": "string"
        },
        "credit_card_bin": {
          "type": "string"
        },
        "cvv_result_code": {
          "type": "string"
        },
        "credit_card_number": {
          "type": "string"
        },
        "credit_card_company": {
          "type": "string"
        }
      }
    },
    "payment_terms": {
      "type": "object",
      "description": "The terms and conditions under which a payment should be processed.",
      "properties": {
        "amount": {
          "type": "number"
        },
        "currency": {
          "type": "string"
        },
        "due_in_days": {
          "type": "number"
        },
        "payment_schedules": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "number"
              },
              "due_at": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              },
              "issued_at": {
                "type": "string"
              },
              "completed_at": {
                "type": "string"
              },
              "expected_payment_method": {
                "type": "string"
              }
            }
          }
        },
        "payment_terms_name": {
          "type": "string"
        },
        "payment_terms_type": {
          "type": "string"
        }
      }
    },
    "payment_gateway_names": {
      "type": "array",
      "description": "The list of payment gateways used for the order.",
      "items": {
        "type": "string"
      }
    },
    "phone": {
      "type": "string",
      "description": "The customer's phone number for receiving SMS notifications."
    },
    "presentment_currency": {
      "type": "string",
      "description": "The presentment currency that was used to display prices to the customer."
    },
    "processed_at": {
      "type": "string",
      "description": "The date and time (ISO 8601 format) when an order was processed. This value is the date that appears on your orders and that's used in the analytic reports. If you're importing orders from an app or another platform, then you can set processed_at to a date and time in the past to match when the original order was created."
    },
    "processing_method": {
      "type": "string",
      "description": "How the payment was processed.",
      "enum": [
        "checkout",
        "direct",
        "manual",
        "offsite",
        "express",
        "free"
      ]
    },
    "referring_site": {
      "type": "string",
      "description": "The website where the customer clicked a link to the shop."
    },
    "refunds": {
      "type": "array",
      "description": "A list of refunds applied to the order. For more information, see the Refund API.",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "note": {},
          "user_id": {},
          "order_id": {
            "type": "number"
          },
          "created_at": {
            "type": "string"
          },
          "processed_at": {
            "type": "string"
          },
          "transactions": {
            "type": "array",
            "items": {}
          },
          "order_adjustments": {
            "type": "array",
            "items": {}
          },
          "refund_line_items": {
            "type": "array",
            "items": {}
          }
        }
      }
    },
    "shipping_address": {
      "type": "object",
      "description": "The mailing address to where the order will be shipped. This address is optional and will not be available on orders that do not require shipping.",
      "properties": {
        "zip": {
          "type": "string",
          "description": "The customer's postal code, also known as zip, postcode, Eircode, etc."
        },
        "city": {
          "type": "string",
          "description": "The customer's city, town, or village."
        },
        "phone": {
          "type": "string",
          "description": "The customer's phone number at this address."
        },
        "company": {
          "type": "string",
          "description": "The customer's company."
        },
        "country": {
          "type": "string",
          "description": "The customer's country."
        },
        "default": {
          "type": "boolean",
          "description": "Whether this address is the default address for the customer."
        },
        "address1": {
          "type": "string",
          "description": "The customer's mailing address."
        },
        "address2": {
          "type": "string",
          "description": "An additional field for the customer's mailing address."
        },
        "province": {
          "type": "string",
          "description": "The customer's region name. Typically a province, a state, or a prefecture."
        },
        "last_name": {
          "type": "string",
          "description": "The customer's last name."
        },
        "first_name": {
          "type": "string",
          "description": "The customer's first name."
        },
        "customer_id": {
          "type": "number",
          "description": "A unique identifier for the customer."
        },
        "country_code": {
          "type": "string",
          "description": "The two-letter country code corresponding to the customer's country."
        },
        "country_name": {
          "type": "string",
          "description": "The customer's normalized country name."
        },
        "province_code": {
          "type": "string",
          "description": "The code for the region of the address, such as the province, state, or district. For example QC for Quebec, Canada."
        }
      }
    },
    "shipping_lines": {
      "type": "array",
      "description": "An array of objects, each of which details a shipping method used.",
      "items": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "price_set": {
            "type": "object",
            "properties": {
              "shop_money": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency_code": {
                    "type": "string"
                  }
                }
              },
              "presentment_money": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency_code": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "tax_lines": {
            "type": "array",
            "items": {}
          },
          "discounted_price": {
            "type": "string"
          },
          "carrier_identifier": {
            "type": "string"
          },
          "discounted_price_set": {
            "type": "object",
            "properties": {
              "shop_money": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency_code": {
                    "type": "string"
                  }
                }
              },
              "presentment_money": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency_code": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "requested_fulfillment_service_id": {
            "type": "string"
          }
        }
      }
    },
    "source_name": {
      "type": "string",
      "description": "Where the order originated. Can be set only during order creation, and is not writeable afterwards. Values for Shopify channels are protected and cannot be assigned by other API clients: web, pos, shopify_draft_order, iphone, and android. Orders created via the API can be assigned any other string of your choice. If unspecified, then new orders are assigned the value of your app's ID."
    },
    "subtotal_price": {
      "type": "number",
      "description": "The price of the order in the shop currency after discounts but before shipping, duties, taxes, and tips."
    },
    "subtotal_price_set": {
      "type": "object",
      "description": "The subtotal of the order in shop and presentment currencies after discounts but before shipping, duties, taxes, and tips.",
      "properties": {
        "shop_money": {
          "type": "object",
          "properties": {
            "amount": {
              "type": "string"
            },
            "currency_code": {
              "type": "string"
            }
          }
        },
        "presentment_money": {
          "type": "object",
          "properties": {
            "amount": {
              "type": "string"
            },
            "currency_code": {
              "type": "string"
            }
          }
        }
      }
    },
    "tags": {
      "type": "string",
      "description": "Tags attached to the order, formatted as a string of comma-separated values. Tags are additional short descriptors, commonly used for filtering and searching. Each individual tag is limited to 40 characters in length."
    },
    "tax_lines": {
      "description": "An array of tax line objects, each of which details a tax applicable to the order.",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "rate": {
            "type": "number"
          },
          "price": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "channel_liable": {
            "type": "boolean"
          }
        }
      }
    },
    "taxes_included": {
      "type": "boolean",
      "description": "Whether taxes are included in the order subtotal."
    },
    "test": {
      "type": "boolean",
      "description": "Whether this is a test order."
    },
    "token": {
      "type": "string",
      "description": "A unique value when referencing the order."
    },
    "total_discounts": {
      "type": "string",
      "description": "The total discounts applied to the price of the order in the shop currency."
    },
    "total_discounts_set": {
      "type": "object",
      "description": "The total discounts applied to the price of the order in shop and presentment currencies.",
      "properties": {
        "shop_money": {
          "type": "object",
          "properties": {
            "amount": {
              "type": "string"
            },
            "currency_code": {
              "type": "string"
            }
          }
        },
        "presentment_money": {
          "type": "object",
          "properties": {
            "amount": {
              "type": "string"
            },
            "currency_code": {
              "type": "string"
            }
          }
        }
      }
    },
    "total_line_items_price": {
      "type": "string",
      "description": "The sum of all line item prices in the shop currency."
    },
    "total_line_items_price_set": {
      "type": "object",
      "description": "The total of all line item prices in shop and presentment currencies.",
      "properties": {
        "shop_money": {
          "type": "object",
          "properties": {
            "amount": {
              "type": "string"
            },
            "currency_code": {
              "type": "string"
            }
          }
        },
        "presentment_money": {
          "type": "object",
          "properties": {
            "amount": {
              "type": "string"
            },
            "currency_code": {
              "type": "string"
            }
          }
        }
      }
    },
    "total_outstanding": {
      "type": "string",
      "description": "The total outstanding amount of the order in the shop currency."
    },
    "total_price": {
      "type": "string",
      "description": "The sum of all line item prices, discounts, shipping, taxes, and tips in the shop currency. Must be positive."
    },
    "total_price_set": {
      "description": "The total price of the order in shop and presentment currencies.",
      "type": "object",
      "properties": {
        "shop_money": {
          "type": "object",
          "properties": {
            "amount": {
              "type": "string"
            },
            "currency_code": {
              "type": "string"
            }
          }
        },
        "presentment_money": {
          "type": "object",
          "properties": {
            "amount": {
              "type": "string"
            },
            "currency_code": {
              "type": "string"
            }
          }
        }
      }
    },
    "total_shipping_price_set": {
      "description": "The total shipping price of the order, excluding discounts and returns, in shop and presentment currencies. If taxes_included is set to true, then total_shipping_price_set includes taxes.",
      "type": "object",
      "properties": {
        "shop_money": {
          "type": "object",
          "properties": {
            "amount": {
              "type": "string"
            },
            "currency_code": {
              "type": "string"
            }
          }
        },
        "presentment_money": {
          "type": "object",
          "properties": {
            "amount": {
              "type": "string"
            },
            "currency_code": {
              "type": "string"
            }
          }
        }
      }
    },
    "total_tax": {
      "type": "string",
      "description": "The sum of all the taxes applied to the order in the shop currency. Must be positive."
    },
    "total_tax_set": {
      "description": "The total tax applied to the order in shop and presentment currencies.",
      "type": "object",
      "properties": {
        "shop_money": {
          "type": "object",
          "properties": {
            "amount": {
              "type": "string"
            },
            "currency_code": {
              "type": "string"
            }
          }
        },
        "presentment_money": {
          "type": "object",
          "properties": {
            "amount": {
              "type": "string"
            },
            "currency_code": {
              "type": "string"
            }
          }
        }
      }
    },
    "total_tip_received": {
      "type": "string",
      "description": "The sum of all the tips in the order in the shop currency."
    },
    "total_weight": {
      "type": "number",
      "description": "The sum of all line item weights in grams. The sum is not adjusted as items are removed from the order."
    },
    "updated_at": {
      "type": "string",
      "description": "The date and time (ISO 8601 format) when the order was last modified. Filtering orders by updated_at is not an effective method for fetching orders because its value can change when no visible fields of an order have been updated. Use the Webhook and Event APIs to subscribe to order events instead."
    },
    "user_id": {
      "type": "number",
      "description": "The ID of the user logged into Shopify POS who processed the order, if applicable."
    },
    "order_status_url": {
      "type": "object",
      "properties": {
        "order_status_url": {
          "type": "string",
          "description": "The URL pointing to the order status web page, if applicable."
        }
      }
    }
  }
}
