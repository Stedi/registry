{
  "description": "A line item.",
  "properties": {
    "amount_subtotal": {
      "description": "Total before any discounts or taxes are applied.",
      "type": "integer"
    },
    "amount_total": {
      "description": "Total after discounts and taxes.",
      "type": "integer"
    },
    "currency": {
      "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
      "type": "string"
    },
    "description": {
      "description": "An arbitrary string attached to the object. Often useful for displaying to users. Defaults to product name.",
      "maxLength": 5000,
      "type": "string"
    },
    "discounts": {
      "description": "The discounts applied to the line item.",
      "items": {
        "description": "",
        "properties": {
          "amount": {
            "description": "The amount discounted.",
            "type": "integer"
          },
          "discount": {
            "description": "A discount represents the actual application of a coupon to a particular\ncustomer. It contains information about when the discount began and when it\nwill end.\n\nRelated guide: [Applying Discounts to Subscriptions](https://stripe.com/docs/billing/subscriptions/discounts).",
            "properties": {
              "checkout_session": {
                "description": "The Checkout session that this coupon is applied to, if it is applied to a particular session in payment mode. Will not be present for subscription mode.",
                "maxLength": 5000,
                "type": [
                  "string",
                  "null"
                ]
              },
              "coupon": {
                "description": "A coupon contains information about a percent-off or amount-off discount you\nmight want to apply to a customer. Coupons may be applied to [invoices](https://stripe.com/docs/api#invoices) or\n[orders](https://stripe.com/docs/api#create_order_legacy-coupon). Coupons do not work with conventional one-off [charges](https://stripe.com/docs/api#create_charge).",
                "properties": {
                  "amount_off": {
                    "description": "Amount (in the `currency` specified) that will be taken off the subtotal of any invoices for this customer.",
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "applies_to": {
                    "description": "",
                    "properties": {
                      "products": {
                        "description": "A list of product IDs this coupon applies to",
                        "items": {
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "products"
                    ],
                    "title": "CouponAppliesTo",
                    "type": "object"
                  },
                  "created": {
                    "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                    "format": "unix-time",
                    "type": "integer"
                  },
                  "currency": {
                    "description": "If `amount_off` has been set, the three-letter [ISO code for the currency](https://stripe.com/docs/currencies) of the amount to take off.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "duration": {
                    "description": "One of `forever`, `once`, and `repeating`. Describes how long a customer who applies this coupon will get the discount.",
                    "enum": [
                      "forever",
                      "once",
                      "repeating"
                    ],
                    "type": "string"
                  },
                  "duration_in_months": {
                    "description": "If `duration` is `repeating`, the number of months the coupon applies. Null if coupon `duration` is `forever` or `once`.",
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "id": {
                    "description": "Unique identifier for the object.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "livemode": {
                    "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                    "type": "boolean"
                  },
                  "max_redemptions": {
                    "description": "Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid.",
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "metadata": {},
                  "name": {
                    "description": "Name of the coupon displayed to customers on for instance invoices or receipts.",
                    "maxLength": 5000,
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "object": {
                    "description": "String representing the object's type. Objects of the same type share the same value.",
                    "enum": [
                      "coupon"
                    ],
                    "type": "string"
                  },
                  "percent_off": {
                    "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon. For example, a coupon with percent_off of 50 will make a %s100 invoice %s50 instead.",
                    "type": [
                      "number",
                      "null"
                    ]
                  },
                  "redeem_by": {
                    "description": "Date after which the coupon can no longer be redeemed.",
                    "format": "unix-time",
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "times_redeemed": {
                    "description": "Number of times this coupon has been applied to a customer.",
                    "type": "integer"
                  },
                  "valid": {
                    "description": "Taking account of the above properties, whether this coupon can still be applied to a customer.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "created",
                  "duration",
                  "id",
                  "livemode",
                  "object",
                  "times_redeemed",
                  "valid"
                ],
                "title": "Coupon",
                "type": "object"
              },
              "customer": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "The ID of the customer associated with this discount."
              },
              "end": {
                "description": "If the coupon has a duration of `repeating`, the date that this discount will end. If the coupon has a duration of `once` or `forever`, this attribute will be null.",
                "format": "unix-time",
                "type": [
                  "integer",
                  "null"
                ]
              },
              "id": {
                "description": "The ID of the discount object. Discounts cannot be fetched by ID. Use `expand[]=discounts` in API calls to expand discount IDs in an array.",
                "maxLength": 5000,
                "type": "string"
              },
              "invoice": {
                "description": "The invoice that the discount's coupon was applied to, if it was applied directly to a particular invoice.",
                "maxLength": 5000,
                "type": [
                  "string",
                  "null"
                ]
              },
              "invoice_item": {
                "description": "The invoice item `id` (or invoice line item `id` for invoice line items of type='subscription') that the discount's coupon was applied to, if it was applied directly to a particular invoice item or invoice line item.",
                "maxLength": 5000,
                "type": [
                  "string",
                  "null"
                ]
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value.",
                "enum": [
                  "discount"
                ],
                "type": "string"
              },
              "promotion_code": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "The promotion code applied to create this discount."
              },
              "start": {
                "description": "Date that the coupon was applied.",
                "format": "unix-time",
                "type": "integer"
              },
              "subscription": {
                "description": "The subscription that this coupon is applied to, if it is applied to a particular subscription.",
                "maxLength": 5000,
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "required": [
              "coupon",
              "id",
              "object",
              "start"
            ],
            "title": "Discount",
            "type": "object"
          }
        },
        "required": [
          "amount",
          "discount"
        ],
        "title": "LineItemsDiscountAmount",
        "type": "object"
      },
      "type": "array"
    },
    "id": {
      "description": "Unique identifier for the object.",
      "maxLength": 5000,
      "type": "string"
    },
    "object": {
      "description": "String representing the object's type. Objects of the same type share the same value.",
      "enum": [
        "item"
      ],
      "type": "string"
    },
    "price": {
      "anyOf": [
        {
          "description": "Prices define the unit cost, currency, and (optional) billing cycle for both recurring and one-time purchases of products.\n[Products](https://stripe.com/docs/api#products) help you track inventory or provisioning, and prices help you track payment terms. Different physical goods or levels of service should be represented by products, and pricing options should be represented by prices. This approach lets you change prices without having to change your provisioning scheme.\n\nFor example, you might have a single \"gold\" product that has prices for $10/month, $100/year, and €9 once.\n\nRelated guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription), [create an invoice](https://stripe.com/docs/billing/invoices/create), and more about [products and prices](https://stripe.com/docs/products-prices/overview).",
          "properties": {
            "active": {
              "description": "Whether the price can be used for new purchases.",
              "type": "boolean"
            },
            "billing_scheme": {
              "description": "Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `unit_amount` or `unit_amount_decimal`) will be charged per unit in `quantity` (for prices with `usage_type=licensed`), or per unit of total usage (for prices with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes.",
              "enum": [
                "per_unit",
                "tiered"
              ],
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "lookup_key": {
              "description": "A lookup key used to retrieve prices dynamically from a static string. This may be up to 200 characters.",
              "maxLength": 5000,
              "type": [
                "string",
                "null"
              ]
            },
            "metadata": {},
            "nickname": {
              "description": "A brief description of the price, hidden from customers.",
              "maxLength": 5000,
              "type": [
                "string",
                "null"
              ]
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "price"
              ],
              "type": "string"
            },
            "product": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                }
              ],
              "description": "The ID of the product this price is associated with."
            },
            "recurring": {
              "anyOf": [
                {
                  "description": "",
                  "properties": {
                    "aggregate_usage": {
                      "description": "Specifies a usage aggregation strategy for prices of `usage_type=metered`. Allowed values are `sum` for summing up all usage during a period, `last_during_period` for using the last usage record reported within a period, `last_ever` for using the last usage record ever (across period bounds) or `max` which uses the usage record with the maximum reported usage during a period. Defaults to `sum`.",
                      "enum": [
                        "last_during_period",
                        "last_ever",
                        "max",
                        "sum",
                        null
                      ],
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "interval": {
                      "description": "The frequency at which a subscription is billed. One of `day`, `week`, `month` or `year`.",
                      "enum": [
                        "day",
                        "month",
                        "week",
                        "year"
                      ],
                      "type": "string"
                    },
                    "interval_count": {
                      "description": "The number of intervals (specified in the `interval` attribute) between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months.",
                      "type": "integer"
                    },
                    "usage_type": {
                      "description": "Configures how the quantity per period should be determined. Can be either `metered` or `licensed`. `licensed` automatically bills the `quantity` set when adding it to a subscription. `metered` aggregates the total usage based on usage records. Defaults to `licensed`.",
                      "enum": [
                        "licensed",
                        "metered"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "interval",
                    "interval_count",
                    "usage_type"
                  ],
                  "title": "Recurring",
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The recurring components of a price such as `interval` and `usage_type`."
            },
            "tax_behavior": {
              "description": "Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.",
              "enum": [
                "exclusive",
                "inclusive",
                "unspecified",
                null
              ],
              "type": [
                "string",
                "null"
              ]
            },
            "tiers": {
              "description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.",
              "items": {
                "description": "",
                "properties": {
                  "flat_amount": {
                    "description": "Price for the entire tier.",
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "flat_amount_decimal": {
                    "description": "Same as `flat_amount`, but contains a decimal value with at most 12 decimal places.",
                    "format": "decimal",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "unit_amount": {
                    "description": "Per unit price for units relevant to the tier.",
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "unit_amount_decimal": {
                    "description": "Same as `unit_amount`, but contains a decimal value with at most 12 decimal places.",
                    "format": "decimal",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "up_to": {
                    "description": "Up to and including to this quantity will be contained in the tier.",
                    "type": [
                      "integer",
                      "null"
                    ]
                  }
                },
                "title": "PriceTier",
                "type": "object"
              },
              "type": "array"
            },
            "tiers_mode": {
              "description": "Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price. In `graduated` tiering, pricing can change as the quantity grows.",
              "enum": [
                "graduated",
                "volume",
                null
              ],
              "type": [
                "string",
                "null"
              ]
            },
            "transform_quantity": {
              "anyOf": [
                {
                  "description": "",
                  "properties": {
                    "divide_by": {
                      "description": "Divide usage by this number.",
                      "type": "integer"
                    },
                    "round": {
                      "description": "After division, either round the result `up` or `down`.",
                      "enum": [
                        "down",
                        "up"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "divide_by",
                    "round"
                  ],
                  "title": "TransformQuantity",
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Apply a transformation to the reported usage or set quantity before computing the amount billed. Cannot be combined with `tiers`."
            },
            "type": {
              "description": "One of `one_time` or `recurring` depending on whether the price is for a one-time purchase or a recurring (subscription) purchase.",
              "enum": [
                "one_time",
                "recurring"
              ],
              "type": "string"
            },
            "unit_amount": {
              "description": "The unit amount in %s to be charged, represented as a whole integer if possible. Only set if `billing_scheme=per_unit`.",
              "type": [
                "integer",
                "null"
              ]
            },
            "unit_amount_decimal": {
              "description": "The unit amount in %s to be charged, represented as a decimal string with at most 12 decimal places. Only set if `billing_scheme=per_unit`.",
              "format": "decimal",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "required": [
            "active",
            "billing_scheme",
            "created",
            "currency",
            "id",
            "livemode",
            "metadata",
            "object",
            "product",
            "type"
          ],
          "title": "Price",
          "type": "object"
        },
        {
          "type": "null"
        }
      ],
      "description": "The price used to generate the line item."
    },
    "quantity": {
      "description": "The quantity of products being purchased.",
      "type": [
        "integer",
        "null"
      ]
    },
    "taxes": {
      "description": "The taxes applied to the line item.",
      "items": {
        "description": "",
        "properties": {
          "amount": {
            "description": "Amount of tax applied for this rate.",
            "type": "integer"
          },
          "rate": {
            "description": "Tax rates can be applied to [invoices](https://stripe.com/docs/billing/invoices/tax-rates), [subscriptions](https://stripe.com/docs/billing/subscriptions/taxes) and [Checkout Sessions](https://stripe.com/docs/payments/checkout/set-up-a-subscription#tax-rates) to collect tax.\n\nRelated guide: [Tax Rates](https://stripe.com/docs/billing/taxes/tax-rates).",
            "properties": {
              "active": {
                "description": "Defaults to `true`. When set to `false`, this tax rate cannot be used with new applications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set.",
                "type": "boolean"
              },
              "country": {
                "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                "maxLength": 5000,
                "type": [
                  "string",
                  "null"
                ]
              },
              "created": {
                "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                "format": "unix-time",
                "type": "integer"
              },
              "description": {
                "description": "An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.",
                "maxLength": 5000,
                "type": [
                  "string",
                  "null"
                ]
              },
              "display_name": {
                "description": "The display name of the tax rates as it will appear to your customer on their receipt email, PDF, and the hosted invoice page.",
                "maxLength": 5000,
                "type": "string"
              },
              "id": {
                "description": "Unique identifier for the object.",
                "maxLength": 5000,
                "type": "string"
              },
              "inclusive": {
                "description": "This specifies if the tax rate is inclusive or exclusive.",
                "type": "boolean"
              },
              "jurisdiction": {
                "description": "The jurisdiction for the tax rate. You can use this label field for tax reporting purposes. It also appears on your customer’s invoice.",
                "maxLength": 5000,
                "type": [
                  "string",
                  "null"
                ]
              },
              "livemode": {
                "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                "type": "boolean"
              },
              "metadata": {},
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value.",
                "enum": [
                  "tax_rate"
                ],
                "type": "string"
              },
              "percentage": {
                "description": "This represents the tax rate percent out of 100.",
                "type": "number"
              },
              "state": {
                "description": "[ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, \"NY\" for New York, United States.",
                "maxLength": 5000,
                "type": [
                  "string",
                  "null"
                ]
              },
              "tax_type": {
                "description": "The high-level tax type, such as `vat` or `sales_tax`.",
                "enum": [
                  "gst",
                  "hst",
                  "jct",
                  "pst",
                  "qst",
                  "rst",
                  "sales_tax",
                  "vat",
                  null
                ],
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "required": [
              "active",
              "created",
              "display_name",
              "id",
              "inclusive",
              "livemode",
              "object",
              "percentage"
            ],
            "title": "TaxRate",
            "type": "object"
          }
        },
        "required": [
          "amount",
          "rate"
        ],
        "title": "LineItemsTaxAmount",
        "type": "object"
      },
      "type": "array"
    }
  },
  "required": [
    "amount_subtotal",
    "amount_total",
    "currency",
    "description",
    "id",
    "object"
  ],
  "title": "LineItem",
  "type": "object",
  "default": {
    "amount_subtotal": 0,
    "amount_total": 0,
    "currency": "string",
    "description": "string",
    "discounts": [
      {
        "amount": 0,
        "discount": {
          "checkout_session": "string",
          "coupon": {
            "amount_off": 0,
            "applies_to": {
              "products": [
                "string"
              ]
            },
            "created": 1647352387,
            "currency": "string",
            "duration": "forever",
            "duration_in_months": 0,
            "id": "string",
            "livemode": true,
            "max_redemptions": 0,
            "metadata": {},
            "name": "string",
            "object": "coupon",
            "percent_off": 0,
            "redeem_by": 1647352387,
            "times_redeemed": 0,
            "valid": true
          },
          "customer": "string",
          "end": 1647352387,
          "id": "string",
          "invoice": "string",
          "invoice_item": "string",
          "object": "discount",
          "promotion_code": "string",
          "start": 1647352387,
          "subscription": "string"
        }
      }
    ],
    "id": "string",
    "object": "item",
    "price": {
      "active": true,
      "billing_scheme": "per_unit",
      "created": 1647352387,
      "currency": "string",
      "id": "string",
      "livemode": true,
      "lookup_key": "string",
      "metadata": {},
      "nickname": "string",
      "object": "price",
      "product": "string",
      "recurring": {
        "aggregate_usage": "last_during_period",
        "interval": "day",
        "interval_count": 0,
        "usage_type": "licensed"
      },
      "tax_behavior": "exclusive",
      "tiers": [
        {
          "flat_amount": 0,
          "flat_amount_decimal": "0.0",
          "unit_amount": 0,
          "unit_amount_decimal": "0.0",
          "up_to": 0
        }
      ],
      "tiers_mode": "graduated",
      "transform_quantity": {
        "divide_by": 0,
        "round": "down"
      },
      "type": "one_time",
      "unit_amount": 0,
      "unit_amount_decimal": "0.0"
    },
    "quantity": 0,
    "taxes": [
      {
        "amount": 0,
        "rate": {
          "active": true,
          "country": "string",
          "created": 1647352387,
          "description": "string",
          "display_name": "string",
          "id": "string",
          "inclusive": true,
          "jurisdiction": "string",
          "livemode": true,
          "metadata": {},
          "object": "tax_rate",
          "percentage": 0,
          "state": "string",
          "tax_type": "gst"
        }
      }
    ]
  },
  "$schema": "https://json-schema.org/draft/2020-12/schema"
}